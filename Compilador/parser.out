Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    CHAR
    CHARACTER
    DIVEQUAL
    DIVIDE
    DO
    FLOAT
    INCLUDE
    INTEGER
    LAND
    LNOT
    LOR
    LSHIFT
    LSHIFTEQUAL
    MINUS
    MINUSEQUAL
    MODEQUAL
    MODULO
    NE
    OREQUAL
    PACKAGE
    PLUS
    PLUSEQUAL
    RETURN
    RSHIFT
    RSHIFTEQUAL
    TERNARY
    TIMES
    TIMESEQUAL
    TYPEID
    WHILE
    XOR
    XOREQUAL

Grammar

Rule 0     S' -> program
Rule 1     program -> class_declaration
Rule 2     program -> program class_declaration
Rule 3     class_declaration -> CLASS ID LBRACE class_body RBRACE
Rule 4     class_body -> statements main
Rule 5     class_body -> class_declaration
Rule 6     class_body -> main
Rule 7     class_body -> statements
Rule 8     class_body -> statements main statements
Rule 9     main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
Rule 10    statement -> assignment
Rule 11    statement -> array_usage
Rule 12    statement -> print_statement
Rule 13    statement -> dcl_variable SEMI
Rule 14    statement -> for_statement
Rule 15    statement -> if_statement
Rule 16    expression -> ID
Rule 17    expression -> NUMBER
Rule 18    expression -> NOT expression
Rule 19    condicion -> ID EQ NUMBER
Rule 20    condicion -> ID GT NUMBER
Rule 21    condicion -> ID GE NUMBER
Rule 22    condicion -> ID LE NUMBER
Rule 23    condicion -> ID LT NUMBER
Rule 24    condicion -> ID AND NUMBER
Rule 25    condicion -> ID OR NUMBER
Rule 26    condicion -> NUMBER EQ NUMBER
Rule 27    condicion -> NUMBER GT NUMBER
Rule 28    condicion -> NUMBER GE NUMBER
Rule 29    condicion -> NUMBER LE NUMBER
Rule 30    condicion -> NUMBER LT NUMBER
Rule 31    condicion -> ID AND ID
Rule 32    condicion -> ID OR ID
Rule 33    condicion -> ID EQ ID
Rule 34    condicion -> ID EQ STRING_LITERAL
Rule 35    condicion -> ID EQUALS propiedades
Rule 36    condicion -> ID GT propiedades
Rule 37    condicion -> ID GE propiedades
Rule 38    condicion -> ID LE propiedades
Rule 39    condicion -> ID LT propiedades
Rule 40    increment_or_decrement -> ID INCREMENT
Rule 41    increment_or_decrement -> ID DECREMENT
Rule 42    for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
Rule 43    for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
Rule 44    inicializacion -> INT ID EQUALS NUMBER
Rule 45    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE
Rule 46    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
Rule 47    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 48    args -> arg
Rule 49    args -> args arg
Rule 50    arg -> ID
Rule 51    arg -> STRING_LITERAL
Rule 52    arg -> NUMBER
Rule 53    arg -> NOT arg
Rule 54    arg -> ID COMMA
Rule 55    arg -> STRING_LITERAL COMMA
Rule 56    arg -> NUMBER COMMA
Rule 57    propiedades -> ID PUNTO ID
Rule 58    statements -> statement
Rule 59    statements -> statements statement
Rule 60    assignment -> ID EQUALS expression SEMI
Rule 61    dcl_variable -> tipo_number ID EQUALS NUMBER
Rule 62    dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL
Rule 63    dcl_variable -> tipo_booleano ID EQUALS valor_boolean
Rule 64    dcl_variable -> tipo_number ID
Rule 65    dcl_variable -> tipo_palabra ID
Rule 66    dcl_variable -> tipo_booleano ID
Rule 67    tipo_booleano -> BOOLEAN
Rule 68    tipo_number -> INT
Rule 69    tipo_number -> DOUBLE
Rule 70    tipo_palabra -> STRING
Rule 71    valor_boolean -> TRUE
Rule 72    valor_boolean -> FALSE
Rule 73    array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 74    array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 75    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
Rule 76    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
Rule 77    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
Rule 78    empty -> <empty>

Terminals, with rules where they appear

AND                  : 24 31
ANDEQUAL             : 
ARGS                 : 9
BOOLEAN              : 67
CHAR                 : 
CHARACTER            : 
CLASS                : 3
COLON                : 43
COMMA                : 54 55 56
DECREMENT            : 41
DIVEQUAL             : 
DIVIDE               : 
DO                   : 
DOUBLE               : 69
ELSE                 : 46 47
EQ                   : 19 26 33 34
EQUALS               : 35 44 60 61 62 63 73 74
FALSE                : 72
FLOAT                : 
FOR                  : 42 43
GE                   : 21 28 37
GT                   : 20 27 36
ID                   : 3 16 19 20 21 22 23 24 25 31 31 32 32 33 33 34 35 36 37 38 39 40 41 43 43 44 50 54 57 57 60 61 62 63 64 65 66 73 74 76 77 77
IF                   : 45 46 47
INCLUDE              : 
INCREMENT            : 40
INT                  : 44 68
INTEGER              : 
LAND                 : 
LBRACE               : 3 9 42 43 45 46 47 47 73 74
LBRACKET             : 9 73 74 77
LE                   : 22 29 38
LNOT                 : 
LOR                  : 
LPAREN               : 9 42 43 45 46 47 75 76 77
LSHIFT               : 
LSHIFTEQUAL          : 
LT                   : 23 30 39
MAIN                 : 9
MINUS                : 
MINUSEQUAL           : 
MODEQUAL             : 
MODULO               : 
NE                   : 
NOT                  : 18 53
NUMBER               : 17 19 20 21 22 23 24 25 26 26 27 27 28 28 29 29 30 30 44 52 56 61
OR                   : 25 32
OREQUAL              : 
OUT                  : 75 76 77
PACKAGE              : 
PLUS                 : 
PLUSEQUAL            : 
PRINTLN              : 75 76 77
PUBLIC               : 9
PUNTO                : 57 75 75 76 76 77 77
RBRACE               : 3 9 42 43 45 46 47 47 73 74
RBRACKET             : 9 73 74 77
RETURN               : 
RPAREN               : 9 42 43 45 46 47 75 76 77
RSHIFT               : 
RSHIFTEQUAL          : 
SEMI                 : 13 42 42 60 73 74 75 76 77
STATIC               : 9
STRING               : 9 70
STRING_LITERAL       : 34 51 55 62 75
SYSTEM               : 75 76 77
TERNARY              : 
TIMES                : 
TIMESEQUAL           : 
TRUE                 : 71
TYPEID               : 
VOID                 : 9
WHILE                : 
XOR                  : 
XOREQUAL             : 
error                : 

Nonterminals, with rules where they appear

arg                  : 48 49 53
args                 : 49 73 74
array_usage          : 11
assignment           : 10
class_body           : 3
class_declaration    : 1 2 5
condicion            : 42 45 46 47
dcl_variable         : 13
empty                : 
expression           : 18 60
for_statement        : 14
if_statement         : 15
increment_or_decrement : 42
inicializacion       : 42
main                 : 4 6 8
print_statement      : 12
program              : 2 0
propiedades          : 35 36 37 38 39
statement            : 58 59
statements           : 4 7 8 8 9 42 43 45 46 46 47 47 59
tipo_booleano        : 63 66
tipo_number          : 61 64 73
tipo_palabra         : 43 62 65 74
valor_boolean        : 63

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_declaration
    (2) program -> . program class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    program                        shift and go to state 1
    class_declaration              shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    class_declaration              shift and go to state 4

state 2

    (1) program -> class_declaration .

    CLASS           reduce using rule 1 (program -> class_declaration .)
    $end            reduce using rule 1 (program -> class_declaration .)


state 3

    (3) class_declaration -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 5


state 4

    (2) program -> program class_declaration .

    CLASS           reduce using rule 2 (program -> program class_declaration .)
    $end            reduce using rule 2 (program -> program class_declaration .)


state 5

    (3) class_declaration -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 6


state 6

    (3) class_declaration -> CLASS ID LBRACE . class_body RBRACE
    (4) class_body -> . statements main
    (5) class_body -> . class_declaration
    (6) class_body -> . main
    (7) class_body -> . statements
    (8) class_body -> . statements main statements
    (58) statements -> . statement
    (59) statements -> . statements statement
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE
    (9) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    CLASS           shift and go to state 3
    PUBLIC          shift and go to state 13
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    class_body                     shift and go to state 8
    statements                     shift and go to state 9
    main                           shift and go to state 10
    class_declaration              shift and go to state 11
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 7

    (60) assignment -> ID . EQUALS expression SEMI

    EQUALS          shift and go to state 30


state 8

    (3) class_declaration -> CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 31


state 9

    (4) class_body -> statements . main
    (7) class_body -> statements .
    (8) class_body -> statements . main statements
    (59) statements -> statements . statement
    (9) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          reduce using rule 7 (class_body -> statements .)
    PUBLIC          shift and go to state 13
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    main                           shift and go to state 32
    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 10

    (6) class_body -> main .

    RBRACE          reduce using rule 6 (class_body -> main .)


state 11

    (5) class_body -> class_declaration .

    RBRACE          reduce using rule 5 (class_body -> class_declaration .)


state 12

    (58) statements -> statement .

    PUBLIC          reduce using rule 58 (statements -> statement .)
    ID              reduce using rule 58 (statements -> statement .)
    SYSTEM          reduce using rule 58 (statements -> statement .)
    FOR             reduce using rule 58 (statements -> statement .)
    IF              reduce using rule 58 (statements -> statement .)
    INT             reduce using rule 58 (statements -> statement .)
    DOUBLE          reduce using rule 58 (statements -> statement .)
    STRING          reduce using rule 58 (statements -> statement .)
    BOOLEAN         reduce using rule 58 (statements -> statement .)
    RBRACE          reduce using rule 58 (statements -> statement .)


state 13

    (9) main -> PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STATIC          shift and go to state 34


state 14

    (70) tipo_palabra -> STRING .

    LBRACKET        reduce using rule 70 (tipo_palabra -> STRING .)
    ID              reduce using rule 70 (tipo_palabra -> STRING .)


state 15

    (10) statement -> assignment .

    PUBLIC          reduce using rule 10 (statement -> assignment .)
    ID              reduce using rule 10 (statement -> assignment .)
    SYSTEM          reduce using rule 10 (statement -> assignment .)
    FOR             reduce using rule 10 (statement -> assignment .)
    IF              reduce using rule 10 (statement -> assignment .)
    INT             reduce using rule 10 (statement -> assignment .)
    DOUBLE          reduce using rule 10 (statement -> assignment .)
    STRING          reduce using rule 10 (statement -> assignment .)
    BOOLEAN         reduce using rule 10 (statement -> assignment .)
    RBRACE          reduce using rule 10 (statement -> assignment .)


state 16

    (11) statement -> array_usage .

    PUBLIC          reduce using rule 11 (statement -> array_usage .)
    ID              reduce using rule 11 (statement -> array_usage .)
    SYSTEM          reduce using rule 11 (statement -> array_usage .)
    FOR             reduce using rule 11 (statement -> array_usage .)
    IF              reduce using rule 11 (statement -> array_usage .)
    INT             reduce using rule 11 (statement -> array_usage .)
    DOUBLE          reduce using rule 11 (statement -> array_usage .)
    STRING          reduce using rule 11 (statement -> array_usage .)
    BOOLEAN         reduce using rule 11 (statement -> array_usage .)
    RBRACE          reduce using rule 11 (statement -> array_usage .)


state 17

    (12) statement -> print_statement .

    PUBLIC          reduce using rule 12 (statement -> print_statement .)
    ID              reduce using rule 12 (statement -> print_statement .)
    SYSTEM          reduce using rule 12 (statement -> print_statement .)
    FOR             reduce using rule 12 (statement -> print_statement .)
    IF              reduce using rule 12 (statement -> print_statement .)
    INT             reduce using rule 12 (statement -> print_statement .)
    DOUBLE          reduce using rule 12 (statement -> print_statement .)
    STRING          reduce using rule 12 (statement -> print_statement .)
    BOOLEAN         reduce using rule 12 (statement -> print_statement .)
    RBRACE          reduce using rule 12 (statement -> print_statement .)


state 18

    (13) statement -> dcl_variable . SEMI

    SEMI            shift and go to state 35


state 19

    (14) statement -> for_statement .

    PUBLIC          reduce using rule 14 (statement -> for_statement .)
    ID              reduce using rule 14 (statement -> for_statement .)
    SYSTEM          reduce using rule 14 (statement -> for_statement .)
    FOR             reduce using rule 14 (statement -> for_statement .)
    IF              reduce using rule 14 (statement -> for_statement .)
    INT             reduce using rule 14 (statement -> for_statement .)
    DOUBLE          reduce using rule 14 (statement -> for_statement .)
    STRING          reduce using rule 14 (statement -> for_statement .)
    BOOLEAN         reduce using rule 14 (statement -> for_statement .)
    RBRACE          reduce using rule 14 (statement -> for_statement .)


state 20

    (15) statement -> if_statement .

    PUBLIC          reduce using rule 15 (statement -> if_statement .)
    ID              reduce using rule 15 (statement -> if_statement .)
    SYSTEM          reduce using rule 15 (statement -> if_statement .)
    FOR             reduce using rule 15 (statement -> if_statement .)
    IF              reduce using rule 15 (statement -> if_statement .)
    INT             reduce using rule 15 (statement -> if_statement .)
    DOUBLE          reduce using rule 15 (statement -> if_statement .)
    STRING          reduce using rule 15 (statement -> if_statement .)
    BOOLEAN         reduce using rule 15 (statement -> if_statement .)
    RBRACE          reduce using rule 15 (statement -> if_statement .)


state 21

    (73) array_usage -> tipo_number . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (61) dcl_variable -> tipo_number . ID EQUALS NUMBER
    (64) dcl_variable -> tipo_number . ID

    LBRACKET        shift and go to state 36
    ID              shift and go to state 37


state 22

    (74) array_usage -> tipo_palabra . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (62) dcl_variable -> tipo_palabra . ID EQUALS STRING_LITERAL
    (65) dcl_variable -> tipo_palabra . ID

    LBRACKET        shift and go to state 38
    ID              shift and go to state 39


state 23

    (75) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 40


state 24

    (63) dcl_variable -> tipo_booleano . ID EQUALS valor_boolean
    (66) dcl_variable -> tipo_booleano . ID

    ID              shift and go to state 41


state 25

    (42) for_statement -> FOR . LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> FOR . LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 42


state 26

    (45) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 43


state 27

    (68) tipo_number -> INT .

    LBRACKET        reduce using rule 68 (tipo_number -> INT .)
    ID              reduce using rule 68 (tipo_number -> INT .)


state 28

    (69) tipo_number -> DOUBLE .

    LBRACKET        reduce using rule 69 (tipo_number -> DOUBLE .)
    ID              reduce using rule 69 (tipo_number -> DOUBLE .)


state 29

    (67) tipo_booleano -> BOOLEAN .

    ID              reduce using rule 67 (tipo_booleano -> BOOLEAN .)


state 30

    (60) assignment -> ID EQUALS . expression SEMI
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . NOT expression

    ID              shift and go to state 44
    NUMBER          shift and go to state 46
    NOT             shift and go to state 47

    expression                     shift and go to state 45

state 31

    (3) class_declaration -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)


state 32

    (4) class_body -> statements main .
    (8) class_body -> statements main . statements
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          reduce using rule 4 (class_body -> statements main .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 48
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 33

    (59) statements -> statements statement .

    PUBLIC          reduce using rule 59 (statements -> statements statement .)
    ID              reduce using rule 59 (statements -> statements statement .)
    SYSTEM          reduce using rule 59 (statements -> statements statement .)
    FOR             reduce using rule 59 (statements -> statements statement .)
    IF              reduce using rule 59 (statements -> statements statement .)
    INT             reduce using rule 59 (statements -> statements statement .)
    DOUBLE          reduce using rule 59 (statements -> statements statement .)
    STRING          reduce using rule 59 (statements -> statements statement .)
    BOOLEAN         reduce using rule 59 (statements -> statements statement .)
    RBRACE          reduce using rule 59 (statements -> statements statement .)


state 34

    (9) main -> PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 49


state 35

    (13) statement -> dcl_variable SEMI .

    PUBLIC          reduce using rule 13 (statement -> dcl_variable SEMI .)
    ID              reduce using rule 13 (statement -> dcl_variable SEMI .)
    SYSTEM          reduce using rule 13 (statement -> dcl_variable SEMI .)
    FOR             reduce using rule 13 (statement -> dcl_variable SEMI .)
    IF              reduce using rule 13 (statement -> dcl_variable SEMI .)
    INT             reduce using rule 13 (statement -> dcl_variable SEMI .)
    DOUBLE          reduce using rule 13 (statement -> dcl_variable SEMI .)
    STRING          reduce using rule 13 (statement -> dcl_variable SEMI .)
    BOOLEAN         reduce using rule 13 (statement -> dcl_variable SEMI .)
    RBRACE          reduce using rule 13 (statement -> dcl_variable SEMI .)


state 36

    (73) array_usage -> tipo_number LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI

    RBRACKET        shift and go to state 50


state 37

    (61) dcl_variable -> tipo_number ID . EQUALS NUMBER
    (64) dcl_variable -> tipo_number ID .

    EQUALS          shift and go to state 51
    SEMI            reduce using rule 64 (dcl_variable -> tipo_number ID .)


state 38

    (74) array_usage -> tipo_palabra LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI

    RBRACKET        shift and go to state 52


state 39

    (62) dcl_variable -> tipo_palabra ID . EQUALS STRING_LITERAL
    (65) dcl_variable -> tipo_palabra ID .

    EQUALS          shift and go to state 53
    SEMI            reduce using rule 65 (dcl_variable -> tipo_palabra ID .)


state 40

    (75) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    OUT             shift and go to state 54


state 41

    (63) dcl_variable -> tipo_booleano ID . EQUALS valor_boolean
    (66) dcl_variable -> tipo_booleano ID .

    EQUALS          shift and go to state 55
    SEMI            reduce using rule 66 (dcl_variable -> tipo_booleano ID .)


state 42

    (42) for_statement -> FOR LPAREN . inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> FOR LPAREN . tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) inicializacion -> . INT ID EQUALS NUMBER
    (70) tipo_palabra -> . STRING

    INT             shift and go to state 58
    STRING          shift and go to state 14

    inicializacion                 shift and go to state 56
    tipo_palabra                   shift and go to state 57

state 43

    (45) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (19) condicion -> . ID EQ NUMBER
    (20) condicion -> . ID GT NUMBER
    (21) condicion -> . ID GE NUMBER
    (22) condicion -> . ID LE NUMBER
    (23) condicion -> . ID LT NUMBER
    (24) condicion -> . ID AND NUMBER
    (25) condicion -> . ID OR NUMBER
    (26) condicion -> . NUMBER EQ NUMBER
    (27) condicion -> . NUMBER GT NUMBER
    (28) condicion -> . NUMBER GE NUMBER
    (29) condicion -> . NUMBER LE NUMBER
    (30) condicion -> . NUMBER LT NUMBER
    (31) condicion -> . ID AND ID
    (32) condicion -> . ID OR ID
    (33) condicion -> . ID EQ ID
    (34) condicion -> . ID EQ STRING_LITERAL
    (35) condicion -> . ID EQUALS propiedades
    (36) condicion -> . ID GT propiedades
    (37) condicion -> . ID GE propiedades
    (38) condicion -> . ID LE propiedades
    (39) condicion -> . ID LT propiedades

    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    condicion                      shift and go to state 59

state 44

    (16) expression -> ID .

    SEMI            reduce using rule 16 (expression -> ID .)


state 45

    (60) assignment -> ID EQUALS expression . SEMI

    SEMI            shift and go to state 62


state 46

    (17) expression -> NUMBER .

    SEMI            reduce using rule 17 (expression -> NUMBER .)


state 47

    (18) expression -> NOT . expression
    (16) expression -> . ID
    (17) expression -> . NUMBER
    (18) expression -> . NOT expression

    ID              shift and go to state 44
    NUMBER          shift and go to state 46
    NOT             shift and go to state 47

    expression                     shift and go to state 63

state 48

    (8) class_body -> statements main statements .
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          reduce using rule 8 (class_body -> statements main statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 49

    (9) main -> PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 64


state 50

    (73) array_usage -> tipo_number LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI

    ID              shift and go to state 65


state 51

    (61) dcl_variable -> tipo_number ID EQUALS . NUMBER

    NUMBER          shift and go to state 66


state 52

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI

    ID              shift and go to state 67


state 53

    (62) dcl_variable -> tipo_palabra ID EQUALS . STRING_LITERAL

    STRING_LITERAL  shift and go to state 68


state 54

    (75) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 69


state 55

    (63) dcl_variable -> tipo_booleano ID EQUALS . valor_boolean
    (71) valor_boolean -> . TRUE
    (72) valor_boolean -> . FALSE

    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    valor_boolean                  shift and go to state 70

state 56

    (42) for_statement -> FOR LPAREN inicializacion . SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 73


state 57

    (43) for_statement -> FOR LPAREN tipo_palabra . ID COLON ID RPAREN LBRACE statements RBRACE

    ID              shift and go to state 74


state 58

    (44) inicializacion -> INT . ID EQUALS NUMBER

    ID              shift and go to state 75


state 59

    (45) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE
    (46) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 76


state 60

    (19) condicion -> ID . EQ NUMBER
    (20) condicion -> ID . GT NUMBER
    (21) condicion -> ID . GE NUMBER
    (22) condicion -> ID . LE NUMBER
    (23) condicion -> ID . LT NUMBER
    (24) condicion -> ID . AND NUMBER
    (25) condicion -> ID . OR NUMBER
    (31) condicion -> ID . AND ID
    (32) condicion -> ID . OR ID
    (33) condicion -> ID . EQ ID
    (34) condicion -> ID . EQ STRING_LITERAL
    (35) condicion -> ID . EQUALS propiedades
    (36) condicion -> ID . GT propiedades
    (37) condicion -> ID . GE propiedades
    (38) condicion -> ID . LE propiedades
    (39) condicion -> ID . LT propiedades

    EQ              shift and go to state 77
    GT              shift and go to state 78
    GE              shift and go to state 79
    LE              shift and go to state 80
    LT              shift and go to state 81
    AND             shift and go to state 82
    OR              shift and go to state 83
    EQUALS          shift and go to state 84


state 61

    (26) condicion -> NUMBER . EQ NUMBER
    (27) condicion -> NUMBER . GT NUMBER
    (28) condicion -> NUMBER . GE NUMBER
    (29) condicion -> NUMBER . LE NUMBER
    (30) condicion -> NUMBER . LT NUMBER

    EQ              shift and go to state 85
    GT              shift and go to state 86
    GE              shift and go to state 87
    LE              shift and go to state 88
    LT              shift and go to state 89


state 62

    (60) assignment -> ID EQUALS expression SEMI .

    PUBLIC          reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    ID              reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    SYSTEM          reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    FOR             reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    IF              reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    INT             reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    DOUBLE          reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    STRING          reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    BOOLEAN         reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)
    RBRACE          reduce using rule 60 (assignment -> ID EQUALS expression SEMI .)


state 63

    (18) expression -> NOT expression .

    SEMI            reduce using rule 18 (expression -> NOT expression .)


state 64

    (9) main -> PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 90


state 65

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI

    EQUALS          shift and go to state 91


state 66

    (61) dcl_variable -> tipo_number ID EQUALS NUMBER .

    SEMI            reduce using rule 61 (dcl_variable -> tipo_number ID EQUALS NUMBER .)


state 67

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI

    EQUALS          shift and go to state 92


state 68

    (62) dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL .

    SEMI            reduce using rule 62 (dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL .)


state 69

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PRINTLN         shift and go to state 93


state 70

    (63) dcl_variable -> tipo_booleano ID EQUALS valor_boolean .

    SEMI            reduce using rule 63 (dcl_variable -> tipo_booleano ID EQUALS valor_boolean .)


state 71

    (71) valor_boolean -> TRUE .

    SEMI            reduce using rule 71 (valor_boolean -> TRUE .)


state 72

    (72) valor_boolean -> FALSE .

    SEMI            reduce using rule 72 (valor_boolean -> FALSE .)


state 73

    (42) for_statement -> FOR LPAREN inicializacion SEMI . condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (19) condicion -> . ID EQ NUMBER
    (20) condicion -> . ID GT NUMBER
    (21) condicion -> . ID GE NUMBER
    (22) condicion -> . ID LE NUMBER
    (23) condicion -> . ID LT NUMBER
    (24) condicion -> . ID AND NUMBER
    (25) condicion -> . ID OR NUMBER
    (26) condicion -> . NUMBER EQ NUMBER
    (27) condicion -> . NUMBER GT NUMBER
    (28) condicion -> . NUMBER GE NUMBER
    (29) condicion -> . NUMBER LE NUMBER
    (30) condicion -> . NUMBER LT NUMBER
    (31) condicion -> . ID AND ID
    (32) condicion -> . ID OR ID
    (33) condicion -> . ID EQ ID
    (34) condicion -> . ID EQ STRING_LITERAL
    (35) condicion -> . ID EQUALS propiedades
    (36) condicion -> . ID GT propiedades
    (37) condicion -> . ID GE propiedades
    (38) condicion -> . ID LE propiedades
    (39) condicion -> . ID LT propiedades

    ID              shift and go to state 60
    NUMBER          shift and go to state 61

    condicion                      shift and go to state 94

state 74

    (43) for_statement -> FOR LPAREN tipo_palabra ID . COLON ID RPAREN LBRACE statements RBRACE

    COLON           shift and go to state 95


state 75

    (44) inicializacion -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 96


state 76

    (45) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE
    (46) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE statements
    (47) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 97


state 77

    (19) condicion -> ID EQ . NUMBER
    (33) condicion -> ID EQ . ID
    (34) condicion -> ID EQ . STRING_LITERAL

    NUMBER          shift and go to state 99
    ID              shift and go to state 98
    STRING_LITERAL  shift and go to state 100


state 78

    (20) condicion -> ID GT . NUMBER
    (36) condicion -> ID GT . propiedades
    (57) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 102
    ID              shift and go to state 101

    propiedades                    shift and go to state 103

state 79

    (21) condicion -> ID GE . NUMBER
    (37) condicion -> ID GE . propiedades
    (57) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 104
    ID              shift and go to state 101

    propiedades                    shift and go to state 105

state 80

    (22) condicion -> ID LE . NUMBER
    (38) condicion -> ID LE . propiedades
    (57) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 106
    ID              shift and go to state 101

    propiedades                    shift and go to state 107

state 81

    (23) condicion -> ID LT . NUMBER
    (39) condicion -> ID LT . propiedades
    (57) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 108
    ID              shift and go to state 101

    propiedades                    shift and go to state 109

state 82

    (24) condicion -> ID AND . NUMBER
    (31) condicion -> ID AND . ID

    NUMBER          shift and go to state 111
    ID              shift and go to state 110


state 83

    (25) condicion -> ID OR . NUMBER
    (32) condicion -> ID OR . ID

    NUMBER          shift and go to state 113
    ID              shift and go to state 112


state 84

    (35) condicion -> ID EQUALS . propiedades
    (57) propiedades -> . ID PUNTO ID

    ID              shift and go to state 101

    propiedades                    shift and go to state 114

state 85

    (26) condicion -> NUMBER EQ . NUMBER

    NUMBER          shift and go to state 115


state 86

    (27) condicion -> NUMBER GT . NUMBER

    NUMBER          shift and go to state 116


state 87

    (28) condicion -> NUMBER GE . NUMBER

    NUMBER          shift and go to state 117


state 88

    (29) condicion -> NUMBER LE . NUMBER

    NUMBER          shift and go to state 118


state 89

    (30) condicion -> NUMBER LT . NUMBER

    NUMBER          shift and go to state 119


state 90

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STRING          shift and go to state 120


state 91

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 121


state 92

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 122


state 93

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    LPAREN          shift and go to state 123


state 94

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion . SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 124


state 95

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON . ID RPAREN LBRACE statements RBRACE

    ID              shift and go to state 125


state 96

    (44) inicializacion -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 126


state 97

    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE statements
    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 127
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 98

    (33) condicion -> ID EQ ID .

    RPAREN          reduce using rule 33 (condicion -> ID EQ ID .)
    SEMI            reduce using rule 33 (condicion -> ID EQ ID .)


state 99

    (19) condicion -> ID EQ NUMBER .

    RPAREN          reduce using rule 19 (condicion -> ID EQ NUMBER .)
    SEMI            reduce using rule 19 (condicion -> ID EQ NUMBER .)


state 100

    (34) condicion -> ID EQ STRING_LITERAL .

    RPAREN          reduce using rule 34 (condicion -> ID EQ STRING_LITERAL .)
    SEMI            reduce using rule 34 (condicion -> ID EQ STRING_LITERAL .)


state 101

    (57) propiedades -> ID . PUNTO ID

    PUNTO           shift and go to state 128


state 102

    (20) condicion -> ID GT NUMBER .

    RPAREN          reduce using rule 20 (condicion -> ID GT NUMBER .)
    SEMI            reduce using rule 20 (condicion -> ID GT NUMBER .)


state 103

    (36) condicion -> ID GT propiedades .

    RPAREN          reduce using rule 36 (condicion -> ID GT propiedades .)
    SEMI            reduce using rule 36 (condicion -> ID GT propiedades .)


state 104

    (21) condicion -> ID GE NUMBER .

    RPAREN          reduce using rule 21 (condicion -> ID GE NUMBER .)
    SEMI            reduce using rule 21 (condicion -> ID GE NUMBER .)


state 105

    (37) condicion -> ID GE propiedades .

    RPAREN          reduce using rule 37 (condicion -> ID GE propiedades .)
    SEMI            reduce using rule 37 (condicion -> ID GE propiedades .)


state 106

    (22) condicion -> ID LE NUMBER .

    RPAREN          reduce using rule 22 (condicion -> ID LE NUMBER .)
    SEMI            reduce using rule 22 (condicion -> ID LE NUMBER .)


state 107

    (38) condicion -> ID LE propiedades .

    RPAREN          reduce using rule 38 (condicion -> ID LE propiedades .)
    SEMI            reduce using rule 38 (condicion -> ID LE propiedades .)


state 108

    (23) condicion -> ID LT NUMBER .

    RPAREN          reduce using rule 23 (condicion -> ID LT NUMBER .)
    SEMI            reduce using rule 23 (condicion -> ID LT NUMBER .)


state 109

    (39) condicion -> ID LT propiedades .

    RPAREN          reduce using rule 39 (condicion -> ID LT propiedades .)
    SEMI            reduce using rule 39 (condicion -> ID LT propiedades .)


state 110

    (31) condicion -> ID AND ID .

    RPAREN          reduce using rule 31 (condicion -> ID AND ID .)
    SEMI            reduce using rule 31 (condicion -> ID AND ID .)


state 111

    (24) condicion -> ID AND NUMBER .

    RPAREN          reduce using rule 24 (condicion -> ID AND NUMBER .)
    SEMI            reduce using rule 24 (condicion -> ID AND NUMBER .)


state 112

    (32) condicion -> ID OR ID .

    RPAREN          reduce using rule 32 (condicion -> ID OR ID .)
    SEMI            reduce using rule 32 (condicion -> ID OR ID .)


state 113

    (25) condicion -> ID OR NUMBER .

    RPAREN          reduce using rule 25 (condicion -> ID OR NUMBER .)
    SEMI            reduce using rule 25 (condicion -> ID OR NUMBER .)


state 114

    (35) condicion -> ID EQUALS propiedades .

    RPAREN          reduce using rule 35 (condicion -> ID EQUALS propiedades .)
    SEMI            reduce using rule 35 (condicion -> ID EQUALS propiedades .)


state 115

    (26) condicion -> NUMBER EQ NUMBER .

    RPAREN          reduce using rule 26 (condicion -> NUMBER EQ NUMBER .)
    SEMI            reduce using rule 26 (condicion -> NUMBER EQ NUMBER .)


state 116

    (27) condicion -> NUMBER GT NUMBER .

    RPAREN          reduce using rule 27 (condicion -> NUMBER GT NUMBER .)
    SEMI            reduce using rule 27 (condicion -> NUMBER GT NUMBER .)


state 117

    (28) condicion -> NUMBER GE NUMBER .

    RPAREN          reduce using rule 28 (condicion -> NUMBER GE NUMBER .)
    SEMI            reduce using rule 28 (condicion -> NUMBER GE NUMBER .)


state 118

    (29) condicion -> NUMBER LE NUMBER .

    RPAREN          reduce using rule 29 (condicion -> NUMBER LE NUMBER .)
    SEMI            reduce using rule 29 (condicion -> NUMBER LE NUMBER .)


state 119

    (30) condicion -> NUMBER LT NUMBER .

    RPAREN          reduce using rule 30 (condicion -> NUMBER LT NUMBER .)
    SEMI            reduce using rule 30 (condicion -> NUMBER LT NUMBER .)


state 120

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LBRACKET        shift and go to state 129


state 121

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (48) args -> . arg
    (49) args -> . args arg
    (50) arg -> . ID
    (51) arg -> . STRING_LITERAL
    (52) arg -> . NUMBER
    (53) arg -> . NOT arg
    (54) arg -> . ID COMMA
    (55) arg -> . STRING_LITERAL COMMA
    (56) arg -> . NUMBER COMMA

    ID              shift and go to state 130
    STRING_LITERAL  shift and go to state 133
    NUMBER          shift and go to state 134
    NOT             shift and go to state 135

    args                           shift and go to state 131
    arg                            shift and go to state 132

state 122

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (48) args -> . arg
    (49) args -> . args arg
    (50) arg -> . ID
    (51) arg -> . STRING_LITERAL
    (52) arg -> . NUMBER
    (53) arg -> . NOT arg
    (54) arg -> . ID COMMA
    (55) arg -> . STRING_LITERAL COMMA
    (56) arg -> . NUMBER COMMA

    ID              shift and go to state 130
    STRING_LITERAL  shift and go to state 133
    NUMBER          shift and go to state 134
    NOT             shift and go to state 135

    args                           shift and go to state 136
    arg                            shift and go to state 132

state 123

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . STRING_LITERAL RPAREN SEMI
    (76) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID LBRACKET ID RBRACKET RPAREN SEMI

    STRING_LITERAL  shift and go to state 137
    ID              shift and go to state 138


state 124

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI . increment_or_decrement RPAREN LBRACE statements RBRACE
    (40) increment_or_decrement -> . ID INCREMENT
    (41) increment_or_decrement -> . ID DECREMENT

    ID              shift and go to state 140

    increment_or_decrement         shift and go to state 139

state 125

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 141


state 126

    (44) inicializacion -> INT ID EQUALS NUMBER .

    SEMI            reduce using rule 44 (inicializacion -> INT ID EQUALS NUMBER .)


state 127

    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE statements
    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 142
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 128

    (57) propiedades -> ID PUNTO . ID

    ID              shift and go to state 143


state 129

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ARGS RPAREN LBRACE statements RBRACE

    RBRACKET        shift and go to state 144


state 130

    (50) arg -> ID .
    (54) arg -> ID . COMMA

    RBRACE          reduce using rule 50 (arg -> ID .)
    ID              reduce using rule 50 (arg -> ID .)
    STRING_LITERAL  reduce using rule 50 (arg -> ID .)
    NUMBER          reduce using rule 50 (arg -> ID .)
    NOT             reduce using rule 50 (arg -> ID .)
    COMMA           shift and go to state 145


state 131

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (49) args -> args . arg
    (50) arg -> . ID
    (51) arg -> . STRING_LITERAL
    (52) arg -> . NUMBER
    (53) arg -> . NOT arg
    (54) arg -> . ID COMMA
    (55) arg -> . STRING_LITERAL COMMA
    (56) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 146
    ID              shift and go to state 130
    STRING_LITERAL  shift and go to state 133
    NUMBER          shift and go to state 134
    NOT             shift and go to state 135

    arg                            shift and go to state 147

state 132

    (48) args -> arg .

    RBRACE          reduce using rule 48 (args -> arg .)
    ID              reduce using rule 48 (args -> arg .)
    STRING_LITERAL  reduce using rule 48 (args -> arg .)
    NUMBER          reduce using rule 48 (args -> arg .)
    NOT             reduce using rule 48 (args -> arg .)


state 133

    (51) arg -> STRING_LITERAL .
    (55) arg -> STRING_LITERAL . COMMA

    RBRACE          reduce using rule 51 (arg -> STRING_LITERAL .)
    ID              reduce using rule 51 (arg -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 51 (arg -> STRING_LITERAL .)
    NUMBER          reduce using rule 51 (arg -> STRING_LITERAL .)
    NOT             reduce using rule 51 (arg -> STRING_LITERAL .)
    COMMA           shift and go to state 148


state 134

    (52) arg -> NUMBER .
    (56) arg -> NUMBER . COMMA

    RBRACE          reduce using rule 52 (arg -> NUMBER .)
    ID              reduce using rule 52 (arg -> NUMBER .)
    STRING_LITERAL  reduce using rule 52 (arg -> NUMBER .)
    NUMBER          reduce using rule 52 (arg -> NUMBER .)
    NOT             reduce using rule 52 (arg -> NUMBER .)
    COMMA           shift and go to state 149


state 135

    (53) arg -> NOT . arg
    (50) arg -> . ID
    (51) arg -> . STRING_LITERAL
    (52) arg -> . NUMBER
    (53) arg -> . NOT arg
    (54) arg -> . ID COMMA
    (55) arg -> . STRING_LITERAL COMMA
    (56) arg -> . NUMBER COMMA

    ID              shift and go to state 130
    STRING_LITERAL  shift and go to state 133
    NUMBER          shift and go to state 134
    NOT             shift and go to state 135

    arg                            shift and go to state 150

state 136

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (49) args -> args . arg
    (50) arg -> . ID
    (51) arg -> . STRING_LITERAL
    (52) arg -> . NUMBER
    (53) arg -> . NOT arg
    (54) arg -> . ID COMMA
    (55) arg -> . STRING_LITERAL COMMA
    (56) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 151
    ID              shift and go to state 130
    STRING_LITERAL  shift and go to state 133
    NUMBER          shift and go to state 134
    NOT             shift and go to state 135

    arg                            shift and go to state 147

state 137

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL . RPAREN SEMI

    RPAREN          shift and go to state 152


state 138

    (76) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . RPAREN SEMI
    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . LBRACKET ID RBRACKET RPAREN SEMI

    RPAREN          shift and go to state 153
    LBRACKET        shift and go to state 154


state 139

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 155


state 140

    (40) increment_or_decrement -> ID . INCREMENT
    (41) increment_or_decrement -> ID . DECREMENT

    INCREMENT       shift and go to state 156
    DECREMENT       shift and go to state 157


state 141

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 158


state 142

    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE statements
    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    PUBLIC          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 159


state 143

    (57) propiedades -> ID PUNTO ID .

    RPAREN          reduce using rule 57 (propiedades -> ID PUNTO ID .)
    SEMI            reduce using rule 57 (propiedades -> ID PUNTO ID .)


state 144

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ARGS RPAREN LBRACE statements RBRACE

    ARGS            shift and go to state 160


state 145

    (54) arg -> ID COMMA .

    RBRACE          reduce using rule 54 (arg -> ID COMMA .)
    ID              reduce using rule 54 (arg -> ID COMMA .)
    STRING_LITERAL  reduce using rule 54 (arg -> ID COMMA .)
    NUMBER          reduce using rule 54 (arg -> ID COMMA .)
    NOT             reduce using rule 54 (arg -> ID COMMA .)


state 146

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 161


state 147

    (49) args -> args arg .

    RBRACE          reduce using rule 49 (args -> args arg .)
    ID              reduce using rule 49 (args -> args arg .)
    STRING_LITERAL  reduce using rule 49 (args -> args arg .)
    NUMBER          reduce using rule 49 (args -> args arg .)
    NOT             reduce using rule 49 (args -> args arg .)


state 148

    (55) arg -> STRING_LITERAL COMMA .

    RBRACE          reduce using rule 55 (arg -> STRING_LITERAL COMMA .)
    ID              reduce using rule 55 (arg -> STRING_LITERAL COMMA .)
    STRING_LITERAL  reduce using rule 55 (arg -> STRING_LITERAL COMMA .)
    NUMBER          reduce using rule 55 (arg -> STRING_LITERAL COMMA .)
    NOT             reduce using rule 55 (arg -> STRING_LITERAL COMMA .)


state 149

    (56) arg -> NUMBER COMMA .

    RBRACE          reduce using rule 56 (arg -> NUMBER COMMA .)
    ID              reduce using rule 56 (arg -> NUMBER COMMA .)
    STRING_LITERAL  reduce using rule 56 (arg -> NUMBER COMMA .)
    NUMBER          reduce using rule 56 (arg -> NUMBER COMMA .)
    NOT             reduce using rule 56 (arg -> NUMBER COMMA .)


state 150

    (53) arg -> NOT arg .

    RBRACE          reduce using rule 53 (arg -> NOT arg .)
    ID              reduce using rule 53 (arg -> NOT arg .)
    STRING_LITERAL  reduce using rule 53 (arg -> NOT arg .)
    NUMBER          reduce using rule 53 (arg -> NOT arg .)
    NOT             reduce using rule 53 (arg -> NOT arg .)


state 151

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 162


state 152

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN . SEMI

    SEMI            shift and go to state 163


state 153

    (76) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 164


state 154

    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET . ID RBRACKET RPAREN SEMI

    ID              shift and go to state 165


state 155

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 166


state 156

    (40) increment_or_decrement -> ID INCREMENT .

    RPAREN          reduce using rule 40 (increment_or_decrement -> ID INCREMENT .)


state 157

    (41) increment_or_decrement -> ID DECREMENT .

    RPAREN          reduce using rule 41 (increment_or_decrement -> ID DECREMENT .)


state 158

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE . statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    tipo_palabra                   shift and go to state 22
    statements                     shift and go to state 167
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_booleano                  shift and go to state 24

state 159

    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . statements
    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    LBRACE          shift and go to state 168
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 169
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 160

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 170


state 161

    (73) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 73 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 162

    (74) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 74 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 163

    (75) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .

    PUBLIC          reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    ID              reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    SYSTEM          reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    FOR             reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    IF              reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    INT             reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    DOUBLE          reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    STRING          reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    BOOLEAN         reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    RBRACE          reduce using rule 75 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)


state 164

    (76) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .

    PUBLIC          reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    SYSTEM          reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    FOR             reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    IF              reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    INT             reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    DOUBLE          reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    STRING          reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    RBRACE          reduce using rule 76 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)


state 165

    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID . RBRACKET RPAREN SEMI

    RBRACKET        shift and go to state 171


state 166

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE . statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 172
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 167

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements . RBRACE
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 173
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    tipo_palabra                   shift and go to state 22
    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_booleano                  shift and go to state 24

state 168

    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 174
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 169

    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    PUBLIC          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    RBRACE          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

  ! ID              [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! SYSTEM          [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! FOR             [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! IF              [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! INT             [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! DOUBLE          [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! STRING          [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! BOOLEAN         [ reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 170

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 175


state 171

    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET . RPAREN SEMI

    RPAREN          shift and go to state 176


state 172

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements . RBRACE
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 177
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 173

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)


state 174

    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 178
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 175

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE . statements RBRACE
    (58) statements -> . statement
    (59) statements -> . statements statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statements                     shift and go to state 179
    statement                      shift and go to state 12
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 176

    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN . SEMI

    SEMI            shift and go to state 180


state 177

    (42) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 42 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)


state 178

    (47) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    PUBLIC          reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 47 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 179

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements . RBRACE
    (59) statements -> statements . statement
    (10) statement -> . assignment
    (11) statement -> . array_usage
    (12) statement -> . print_statement
    (13) statement -> . dcl_variable SEMI
    (14) statement -> . for_statement
    (15) statement -> . if_statement
    (60) assignment -> . ID EQUALS expression SEMI
    (73) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (74) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (75) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (76) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (77) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (61) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (62) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (63) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (64) dcl_variable -> . tipo_number ID
    (65) dcl_variable -> . tipo_palabra ID
    (66) dcl_variable -> . tipo_booleano ID
    (42) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (47) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (68) tipo_number -> . INT
    (69) tipo_number -> . DOUBLE
    (70) tipo_palabra -> . STRING
    (67) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 181
    ID              shift and go to state 7
    SYSTEM          shift and go to state 23
    FOR             shift and go to state 25
    IF              shift and go to state 26
    INT             shift and go to state 27
    DOUBLE          shift and go to state 28
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 29

    statement                      shift and go to state 33
    assignment                     shift and go to state 15
    array_usage                    shift and go to state 16
    print_statement                shift and go to state 17
    dcl_variable                   shift and go to state 18
    for_statement                  shift and go to state 19
    if_statement                   shift and go to state 20
    tipo_number                    shift and go to state 21
    tipo_palabra                   shift and go to state 22
    tipo_booleano                  shift and go to state 24

state 180

    (77) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .

    PUBLIC          reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    ID              reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    SYSTEM          reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    FOR             reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    IF              reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    INT             reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    DOUBLE          reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    STRING          reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    BOOLEAN         reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    RBRACE          reduce using rule 77 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)


state 181

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 169 resolved as shift
WARNING: shift/reduce conflict for FOR in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for INT in state 169 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 169 resolved as shift
WARNING: shift/reduce conflict for STRING in state 169 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 169 resolved as shift
