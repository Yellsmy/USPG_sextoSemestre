Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    CHAR
    CHARACTER
    DIVEQUAL
    DIVIDE
    DO
    FLOAT
    INCLUDE
    INTEGER
    LAND
    LNOT
    LOR
    LSHIFT
    LSHIFTEQUAL
    MINUS
    MINUSEQUAL
    MODEQUAL
    MODULO
    NE
    OREQUAL
    PACKAGE
    PLUSEQUAL
    RETURN
    RSHIFT
    RSHIFTEQUAL
    TERNARY
    TIMES
    TIMESEQUAL
    TYPEID
    WHILE
    XOR
    XOREQUAL

Grammar

Rule 0     S' -> program
Rule 1     program -> class_declaration
Rule 2     program -> program class_declaration
Rule 3     class_declaration -> CLASS ID LBRACE class_body RBRACE
Rule 4     class_body -> statements main
Rule 5     class_body -> class_declaration
Rule 6     class_body -> main
Rule 7     class_body -> statements
Rule 8     class_body -> statements main statements
Rule 9     main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
Rule 10    statement -> empty
Rule 11    statement -> assignment
Rule 12    statement -> array_usage
Rule 13    statement -> array_dcl
Rule 14    statement -> array_assignment
Rule 15    statement -> print_statement
Rule 16    statement -> dcl_variable SEMI
Rule 17    statement -> dcl_variable_with_init SEMI
Rule 18    statement -> for_statement
Rule 19    statement -> if_statement
Rule 20    expression -> ID
Rule 21    expression -> NUMBER
Rule 22    expression -> STRING_LITERAL
Rule 23    expression -> NOT expression
Rule 24    condicion -> <empty>
Rule 25    condicion -> NUMBER EQ NUMBER
Rule 26    condicion -> NUMBER GT NUMBER
Rule 27    condicion -> NUMBER GE NUMBER
Rule 28    condicion -> NUMBER LE NUMBER
Rule 29    condicion -> NUMBER LT NUMBER
Rule 30    condicion_var -> ID EQ NUMBER
Rule 31    condicion_var -> ID GT NUMBER
Rule 32    condicion_var -> ID GE NUMBER
Rule 33    condicion_var -> ID LE NUMBER
Rule 34    condicion_var -> ID LT NUMBER
Rule 35    condicion_var -> ID AND NUMBER
Rule 36    condicion_var -> ID OR NUMBER
Rule 37    condicion_var -> ID AND ID
Rule 38    condicion_var -> ID OR ID
Rule 39    condicion_var -> ID EQ ID
Rule 40    condicion_var -> ID EQ STRING_LITERAL
Rule 41    condicion_var -> ID EQUALS propiedades
Rule 42    condicion_var -> ID GT propiedades
Rule 43    condicion_var -> ID GE propiedades
Rule 44    condicion_var -> ID LE propiedades
Rule 45    condicion_var -> ID LT propiedades
Rule 46    condicion_if -> ID EQ NUMBER
Rule 47    condicion_if -> ID GT NUMBER
Rule 48    condicion_if -> ID GE NUMBER
Rule 49    condicion_if -> ID LE NUMBER
Rule 50    condicion_if -> ID LT NUMBER
Rule 51    condicion_if -> ID AND NUMBER
Rule 52    condicion_if -> ID OR NUMBER
Rule 53    condicion_if -> ID AND ID
Rule 54    condicion_if -> ID OR ID
Rule 55    condicion_if -> ID EQ ID
Rule 56    condicion_if -> ID EQ STRING_LITERAL
Rule 57    condicion_if -> ID EQUALS propiedades
Rule 58    condicion_if -> ID GT propiedades
Rule 59    condicion_if -> ID GE propiedades
Rule 60    condicion_if -> ID LE propiedades
Rule 61    condicion_if -> ID LT propiedades
Rule 62    increment_or_decrement -> ID INCREMENT
Rule 63    increment_or_decrement -> ID DECREMENT
Rule 64    for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
Rule 65    for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
Rule 66    for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
Rule 67    inicializacion -> INT ID EQUALS NUMBER
Rule 68    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE
Rule 69    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
Rule 70    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 71    if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
Rule 72    if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
Rule 73    if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 74    args -> arg
Rule 75    args -> args arg
Rule 76    arg -> ID
Rule 77    arg -> STRING_LITERAL
Rule 78    arg -> NUMBER
Rule 79    arg -> NOT arg
Rule 80    arg -> ID COMMA
Rule 81    arg -> STRING_LITERAL COMMA
Rule 82    arg -> NUMBER COMMA
Rule 83    propiedades -> ID PUNTO ID
Rule 84    statements -> statement
Rule 85    statements -> statements statement
Rule 86    assignment -> ID EQUALS expression SEMI
Rule 87    suma -> NUMBER PLUS NUMBER
Rule 88    dcl_variable -> tipo_number ID
Rule 89    dcl_variable -> tipo_palabra ID
Rule 90    dcl_variable -> tipo_booleano ID
Rule 91    dcl_variable_with_init -> tipo_number ID EQUALS NUMBER
Rule 92    dcl_variable_with_init -> tipo_palabra ID EQUALS STRING_LITERAL
Rule 93    dcl_variable_with_init -> tipo_booleano ID EQUALS valor_boolean
Rule 94    dcl_variable_with_init -> tipo_number ID EQUALS suma
Rule 95    tipo_booleano -> BOOLEAN
Rule 96    tipo_number -> INT
Rule 97    tipo_number -> DOUBLE
Rule 98    tipo_palabra -> STRING
Rule 99    valor_boolean -> TRUE
Rule 100   valor_boolean -> FALSE
Rule 101   array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 102   array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 103   array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI
Rule 104   array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI
Rule 105   array_assignment -> ID EQUALS LBRACE args RBRACE SEMI
Rule 106   print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
Rule 107   print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
Rule 108   print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
Rule 109   empty -> <empty>

Terminals, with rules where they appear

AND                  : 35 37 51 53
ANDEQUAL             : 
ARGS                 : 9
BOOLEAN              : 95
CHAR                 : 
CHARACTER            : 
CLASS                : 3
COLON                : 66
COMMA                : 80 81 82
DECREMENT            : 63
DIVEQUAL             : 
DIVIDE               : 
DO                   : 
DOUBLE               : 97
ELSE                 : 69 70 72 73
EQ                   : 25 30 39 40 46 55 56
EQUALS               : 41 57 67 86 91 92 93 94 101 102 105
FALSE                : 100
FLOAT                : 
FOR                  : 64 65 66
GE                   : 27 32 43 48 59
GT                   : 26 31 42 47 58
ID                   : 3 20 30 31 32 33 34 35 36 37 37 38 38 39 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 53 54 54 55 55 56 57 58 59 60 61 62 63 66 67 76 80 83 83 86 88 89 90 91 92 93 94 101 102 103 104 105 107 108 108
IF                   : 68 69 70 71 72 73
INCLUDE              : 
INCREMENT            : 62
INT                  : 67 96
INTEGER              : 
LAND                 : 
LBRACE               : 3 9 64 65 66 68 69 70 70 71 72 73 73 101 102 105
LBRACKET             : 9 101 102 103 104 108
LE                   : 28 33 44 49 60
LNOT                 : 
LOR                  : 
LPAREN               : 9 64 65 66 68 69 70 71 72 73 106 107 108
LSHIFT               : 
LSHIFTEQUAL          : 
LT                   : 29 34 45 50 61
MAIN                 : 9
MINUS                : 
MINUSEQUAL           : 
MODEQUAL             : 
MODULO               : 
NE                   : 
NOT                  : 23 79
NUMBER               : 21 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 67 78 82 87 87 91
OR                   : 36 38 52 54
OREQUAL              : 
OUT                  : 106 107 108
PACKAGE              : 
PLUS                 : 87
PLUSEQUAL            : 
PRINTLN              : 106 107 108
PUBLIC               : 9
PUNTO                : 83 106 106 107 107 108 108
RBRACE               : 3 9 64 65 66 68 69 70 70 71 72 73 73 101 102 105
RBRACKET             : 9 101 102 103 104 108
RETURN               : 
RPAREN               : 9 64 65 66 68 69 70 71 72 73 106 107 108
RSHIFT               : 
RSHIFTEQUAL          : 
SEMI                 : 16 17 64 64 65 65 86 101 102 103 104 105 106 107 108
STATIC               : 9
STRING               : 9 98
STRING_LITERAL       : 22 40 56 77 81 92 106
SYSTEM               : 106 107 108
TERNARY              : 
TIMES                : 
TIMESEQUAL           : 
TRUE                 : 99
TYPEID               : 
VOID                 : 9
WHILE                : 
XOR                  : 
XOREQUAL             : 
error                : 

Nonterminals, with rules where they appear

arg                  : 74 75 79
args                 : 75 101 102 105
array_assignment     : 14
array_dcl            : 13
array_usage          : 12
assignment           : 11
class_body           : 3
class_declaration    : 1 2 5
condicion            : 64 68 69 70
condicion_if         : 71 72 73
condicion_var        : 65
dcl_variable         : 16 66
dcl_variable_with_init : 17
empty                : 10
expression           : 23 86
for_statement        : 18
if_statement         : 19
increment_or_decrement : 64 65
inicializacion       : 64 65
main                 : 4 6 8
print_statement      : 15
program              : 2 0
propiedades          : 41 42 43 44 45 57 58 59 60 61
statement            : 84 85
statements           : 4 7 8 8 9 64 65 66 68 69 69 70 70 71 72 72 73 73 85
suma                 : 94
tipo_booleano        : 90 93
tipo_number          : 88 91 94 101 103
tipo_palabra         : 89 92 102 104
valor_boolean        : 93

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_declaration
    (2) program -> . program class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    program                        shift and go to state 1
    class_declaration              shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    class_declaration              shift and go to state 4

state 2

    (1) program -> class_declaration .

    CLASS           reduce using rule 1 (program -> class_declaration .)
    $end            reduce using rule 1 (program -> class_declaration .)


state 3

    (3) class_declaration -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 5


state 4

    (2) program -> program class_declaration .

    CLASS           reduce using rule 2 (program -> program class_declaration .)
    $end            reduce using rule 2 (program -> program class_declaration .)


state 5

    (3) class_declaration -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 6


state 6

    (3) class_declaration -> CLASS ID LBRACE . class_body RBRACE
    (4) class_body -> . statements main
    (5) class_body -> . class_declaration
    (6) class_body -> . main
    (7) class_body -> . statements
    (8) class_body -> . statements main statements
    (84) statements -> . statement
    (85) statements -> . statements statement
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE
    (9) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    CLASS           shift and go to state 3
    PUBLIC          shift and go to state 13
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! PUBLIC          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    class_body                     shift and go to state 8
    statements                     shift and go to state 9
    main                           shift and go to state 10
    class_declaration              shift and go to state 11
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 7

    (86) assignment -> ID . EQUALS expression SEMI
    (105) array_assignment -> ID . EQUALS LBRACE args RBRACE SEMI

    EQUALS          shift and go to state 34


state 8

    (3) class_declaration -> CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 35


state 9

    (4) class_body -> statements . main
    (7) class_body -> statements .
    (8) class_body -> statements . main statements
    (85) statements -> statements . statement
    (9) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! reduce/reduce conflict for RBRACE resolved using rule 7 (class_body -> statements .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 7 (class_body -> statements .)
    PUBLIC          shift and go to state 13
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! PUBLIC          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]
  ! RBRACE          [ reduce using rule 109 (empty -> .) ]

    main                           shift and go to state 36
    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 10

    (6) class_body -> main .

    RBRACE          reduce using rule 6 (class_body -> main .)


state 11

    (5) class_body -> class_declaration .

    RBRACE          reduce using rule 5 (class_body -> class_declaration .)


state 12

    (84) statements -> statement .

    PUBLIC          reduce using rule 84 (statements -> statement .)
    ID              reduce using rule 84 (statements -> statement .)
    SYSTEM          reduce using rule 84 (statements -> statement .)
    FOR             reduce using rule 84 (statements -> statement .)
    IF              reduce using rule 84 (statements -> statement .)
    INT             reduce using rule 84 (statements -> statement .)
    DOUBLE          reduce using rule 84 (statements -> statement .)
    STRING          reduce using rule 84 (statements -> statement .)
    BOOLEAN         reduce using rule 84 (statements -> statement .)
    RBRACE          reduce using rule 84 (statements -> statement .)


state 13

    (9) main -> PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STATIC          shift and go to state 38


state 14

    (98) tipo_palabra -> STRING .

    LBRACKET        reduce using rule 98 (tipo_palabra -> STRING .)
    ID              reduce using rule 98 (tipo_palabra -> STRING .)


state 15

    (10) statement -> empty .

    PUBLIC          reduce using rule 10 (statement -> empty .)
    ID              reduce using rule 10 (statement -> empty .)
    SYSTEM          reduce using rule 10 (statement -> empty .)
    FOR             reduce using rule 10 (statement -> empty .)
    IF              reduce using rule 10 (statement -> empty .)
    INT             reduce using rule 10 (statement -> empty .)
    DOUBLE          reduce using rule 10 (statement -> empty .)
    STRING          reduce using rule 10 (statement -> empty .)
    BOOLEAN         reduce using rule 10 (statement -> empty .)
    RBRACE          reduce using rule 10 (statement -> empty .)


state 16

    (11) statement -> assignment .

    PUBLIC          reduce using rule 11 (statement -> assignment .)
    ID              reduce using rule 11 (statement -> assignment .)
    SYSTEM          reduce using rule 11 (statement -> assignment .)
    FOR             reduce using rule 11 (statement -> assignment .)
    IF              reduce using rule 11 (statement -> assignment .)
    INT             reduce using rule 11 (statement -> assignment .)
    DOUBLE          reduce using rule 11 (statement -> assignment .)
    STRING          reduce using rule 11 (statement -> assignment .)
    BOOLEAN         reduce using rule 11 (statement -> assignment .)
    RBRACE          reduce using rule 11 (statement -> assignment .)


state 17

    (12) statement -> array_usage .

    PUBLIC          reduce using rule 12 (statement -> array_usage .)
    ID              reduce using rule 12 (statement -> array_usage .)
    SYSTEM          reduce using rule 12 (statement -> array_usage .)
    FOR             reduce using rule 12 (statement -> array_usage .)
    IF              reduce using rule 12 (statement -> array_usage .)
    INT             reduce using rule 12 (statement -> array_usage .)
    DOUBLE          reduce using rule 12 (statement -> array_usage .)
    STRING          reduce using rule 12 (statement -> array_usage .)
    BOOLEAN         reduce using rule 12 (statement -> array_usage .)
    RBRACE          reduce using rule 12 (statement -> array_usage .)


state 18

    (13) statement -> array_dcl .

    PUBLIC          reduce using rule 13 (statement -> array_dcl .)
    ID              reduce using rule 13 (statement -> array_dcl .)
    SYSTEM          reduce using rule 13 (statement -> array_dcl .)
    FOR             reduce using rule 13 (statement -> array_dcl .)
    IF              reduce using rule 13 (statement -> array_dcl .)
    INT             reduce using rule 13 (statement -> array_dcl .)
    DOUBLE          reduce using rule 13 (statement -> array_dcl .)
    STRING          reduce using rule 13 (statement -> array_dcl .)
    BOOLEAN         reduce using rule 13 (statement -> array_dcl .)
    RBRACE          reduce using rule 13 (statement -> array_dcl .)


state 19

    (14) statement -> array_assignment .

    PUBLIC          reduce using rule 14 (statement -> array_assignment .)
    ID              reduce using rule 14 (statement -> array_assignment .)
    SYSTEM          reduce using rule 14 (statement -> array_assignment .)
    FOR             reduce using rule 14 (statement -> array_assignment .)
    IF              reduce using rule 14 (statement -> array_assignment .)
    INT             reduce using rule 14 (statement -> array_assignment .)
    DOUBLE          reduce using rule 14 (statement -> array_assignment .)
    STRING          reduce using rule 14 (statement -> array_assignment .)
    BOOLEAN         reduce using rule 14 (statement -> array_assignment .)
    RBRACE          reduce using rule 14 (statement -> array_assignment .)


state 20

    (15) statement -> print_statement .

    PUBLIC          reduce using rule 15 (statement -> print_statement .)
    ID              reduce using rule 15 (statement -> print_statement .)
    SYSTEM          reduce using rule 15 (statement -> print_statement .)
    FOR             reduce using rule 15 (statement -> print_statement .)
    IF              reduce using rule 15 (statement -> print_statement .)
    INT             reduce using rule 15 (statement -> print_statement .)
    DOUBLE          reduce using rule 15 (statement -> print_statement .)
    STRING          reduce using rule 15 (statement -> print_statement .)
    BOOLEAN         reduce using rule 15 (statement -> print_statement .)
    RBRACE          reduce using rule 15 (statement -> print_statement .)


state 21

    (16) statement -> dcl_variable . SEMI

    SEMI            shift and go to state 39


state 22

    (17) statement -> dcl_variable_with_init . SEMI

    SEMI            shift and go to state 40


state 23

    (18) statement -> for_statement .

    PUBLIC          reduce using rule 18 (statement -> for_statement .)
    ID              reduce using rule 18 (statement -> for_statement .)
    SYSTEM          reduce using rule 18 (statement -> for_statement .)
    FOR             reduce using rule 18 (statement -> for_statement .)
    IF              reduce using rule 18 (statement -> for_statement .)
    INT             reduce using rule 18 (statement -> for_statement .)
    DOUBLE          reduce using rule 18 (statement -> for_statement .)
    STRING          reduce using rule 18 (statement -> for_statement .)
    BOOLEAN         reduce using rule 18 (statement -> for_statement .)
    RBRACE          reduce using rule 18 (statement -> for_statement .)


state 24

    (19) statement -> if_statement .

    PUBLIC          reduce using rule 19 (statement -> if_statement .)
    ID              reduce using rule 19 (statement -> if_statement .)
    SYSTEM          reduce using rule 19 (statement -> if_statement .)
    FOR             reduce using rule 19 (statement -> if_statement .)
    IF              reduce using rule 19 (statement -> if_statement .)
    INT             reduce using rule 19 (statement -> if_statement .)
    DOUBLE          reduce using rule 19 (statement -> if_statement .)
    STRING          reduce using rule 19 (statement -> if_statement .)
    BOOLEAN         reduce using rule 19 (statement -> if_statement .)
    RBRACE          reduce using rule 19 (statement -> if_statement .)


state 25

    (101) array_usage -> tipo_number . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> tipo_number . LBRACKET RBRACKET ID SEMI
    (88) dcl_variable -> tipo_number . ID
    (91) dcl_variable_with_init -> tipo_number . ID EQUALS NUMBER
    (94) dcl_variable_with_init -> tipo_number . ID EQUALS suma

    LBRACKET        shift and go to state 41
    ID              shift and go to state 42


state 26

    (102) array_usage -> tipo_palabra . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (104) array_dcl -> tipo_palabra . LBRACKET RBRACKET ID SEMI
    (89) dcl_variable -> tipo_palabra . ID
    (92) dcl_variable_with_init -> tipo_palabra . ID EQUALS STRING_LITERAL

    LBRACKET        shift and go to state 43
    ID              shift and go to state 44


state 27

    (106) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 45


state 28

    (90) dcl_variable -> tipo_booleano . ID
    (93) dcl_variable_with_init -> tipo_booleano . ID EQUALS valor_boolean

    ID              shift and go to state 46


state 29

    (64) for_statement -> FOR . LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> FOR . LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> FOR . LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 47


state 30

    (68) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> IF . LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> IF . LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> IF . LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 48


state 31

    (96) tipo_number -> INT .

    LBRACKET        reduce using rule 96 (tipo_number -> INT .)
    ID              reduce using rule 96 (tipo_number -> INT .)


state 32

    (97) tipo_number -> DOUBLE .

    LBRACKET        reduce using rule 97 (tipo_number -> DOUBLE .)
    ID              reduce using rule 97 (tipo_number -> DOUBLE .)


state 33

    (95) tipo_booleano -> BOOLEAN .

    ID              reduce using rule 95 (tipo_booleano -> BOOLEAN .)


state 34

    (86) assignment -> ID EQUALS . expression SEMI
    (105) array_assignment -> ID EQUALS . LBRACE args RBRACE SEMI
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . STRING_LITERAL
    (23) expression -> . NOT expression

    LBRACE          shift and go to state 51
    ID              shift and go to state 49
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    NOT             shift and go to state 54

    expression                     shift and go to state 50

state 35

    (3) class_declaration -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)


state 36

    (4) class_body -> statements main .
    (8) class_body -> statements main . statements
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! reduce/reduce conflict for RBRACE resolved using rule 4 (class_body -> statements main .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 4 (class_body -> statements main .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]
  ! RBRACE          [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 55
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 37

    (85) statements -> statements statement .

    PUBLIC          reduce using rule 85 (statements -> statements statement .)
    ID              reduce using rule 85 (statements -> statements statement .)
    SYSTEM          reduce using rule 85 (statements -> statements statement .)
    FOR             reduce using rule 85 (statements -> statements statement .)
    IF              reduce using rule 85 (statements -> statements statement .)
    INT             reduce using rule 85 (statements -> statements statement .)
    DOUBLE          reduce using rule 85 (statements -> statements statement .)
    STRING          reduce using rule 85 (statements -> statements statement .)
    BOOLEAN         reduce using rule 85 (statements -> statements statement .)
    RBRACE          reduce using rule 85 (statements -> statements statement .)


state 38

    (9) main -> PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 56


state 39

    (16) statement -> dcl_variable SEMI .

    PUBLIC          reduce using rule 16 (statement -> dcl_variable SEMI .)
    ID              reduce using rule 16 (statement -> dcl_variable SEMI .)
    SYSTEM          reduce using rule 16 (statement -> dcl_variable SEMI .)
    FOR             reduce using rule 16 (statement -> dcl_variable SEMI .)
    IF              reduce using rule 16 (statement -> dcl_variable SEMI .)
    INT             reduce using rule 16 (statement -> dcl_variable SEMI .)
    DOUBLE          reduce using rule 16 (statement -> dcl_variable SEMI .)
    STRING          reduce using rule 16 (statement -> dcl_variable SEMI .)
    BOOLEAN         reduce using rule 16 (statement -> dcl_variable SEMI .)
    RBRACE          reduce using rule 16 (statement -> dcl_variable SEMI .)


state 40

    (17) statement -> dcl_variable_with_init SEMI .

    PUBLIC          reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    ID              reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    SYSTEM          reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    FOR             reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    IF              reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    INT             reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    DOUBLE          reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    STRING          reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    BOOLEAN         reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)
    RBRACE          reduce using rule 17 (statement -> dcl_variable_with_init SEMI .)


state 41

    (101) array_usage -> tipo_number LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> tipo_number LBRACKET . RBRACKET ID SEMI

    RBRACKET        shift and go to state 57


state 42

    (88) dcl_variable -> tipo_number ID .
    (91) dcl_variable_with_init -> tipo_number ID . EQUALS NUMBER
    (94) dcl_variable_with_init -> tipo_number ID . EQUALS suma

    SEMI            reduce using rule 88 (dcl_variable -> tipo_number ID .)
    EQUALS          shift and go to state 58


state 43

    (102) array_usage -> tipo_palabra LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (104) array_dcl -> tipo_palabra LBRACKET . RBRACKET ID SEMI

    RBRACKET        shift and go to state 59


state 44

    (89) dcl_variable -> tipo_palabra ID .
    (92) dcl_variable_with_init -> tipo_palabra ID . EQUALS STRING_LITERAL

    SEMI            reduce using rule 89 (dcl_variable -> tipo_palabra ID .)
    EQUALS          shift and go to state 60


state 45

    (106) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    OUT             shift and go to state 61


state 46

    (90) dcl_variable -> tipo_booleano ID .
    (93) dcl_variable_with_init -> tipo_booleano ID . EQUALS valor_boolean

    SEMI            reduce using rule 90 (dcl_variable -> tipo_booleano ID .)
    EQUALS          shift and go to state 62


state 47

    (64) for_statement -> FOR LPAREN . inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> FOR LPAREN . inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> FOR LPAREN . dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (67) inicializacion -> . INT ID EQUALS NUMBER
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

    INT             shift and go to state 65
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

    inicializacion                 shift and go to state 63
    dcl_variable                   shift and go to state 64
    tipo_number                    shift and go to state 66
    tipo_palabra                   shift and go to state 67
    tipo_booleano                  shift and go to state 68

state 48

    (68) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> IF LPAREN . condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> IF LPAREN . condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> IF LPAREN . condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (24) condicion -> .
    (25) condicion -> . NUMBER EQ NUMBER
    (26) condicion -> . NUMBER GT NUMBER
    (27) condicion -> . NUMBER GE NUMBER
    (28) condicion -> . NUMBER LE NUMBER
    (29) condicion -> . NUMBER LT NUMBER
    (46) condicion_if -> . ID EQ NUMBER
    (47) condicion_if -> . ID GT NUMBER
    (48) condicion_if -> . ID GE NUMBER
    (49) condicion_if -> . ID LE NUMBER
    (50) condicion_if -> . ID LT NUMBER
    (51) condicion_if -> . ID AND NUMBER
    (52) condicion_if -> . ID OR NUMBER
    (53) condicion_if -> . ID AND ID
    (54) condicion_if -> . ID OR ID
    (55) condicion_if -> . ID EQ ID
    (56) condicion_if -> . ID EQ STRING_LITERAL
    (57) condicion_if -> . ID EQUALS propiedades
    (58) condicion_if -> . ID GT propiedades
    (59) condicion_if -> . ID GE propiedades
    (60) condicion_if -> . ID LE propiedades
    (61) condicion_if -> . ID LT propiedades

    RPAREN          reduce using rule 24 (condicion -> .)
    NUMBER          shift and go to state 71
    ID              shift and go to state 72

    condicion                      shift and go to state 69
    condicion_if                   shift and go to state 70

state 49

    (20) expression -> ID .

    SEMI            reduce using rule 20 (expression -> ID .)


state 50

    (86) assignment -> ID EQUALS expression . SEMI

    SEMI            shift and go to state 73


state 51

    (105) array_assignment -> ID EQUALS LBRACE . args RBRACE SEMI
    (74) args -> . arg
    (75) args -> . args arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    args                           shift and go to state 75
    arg                            shift and go to state 76

state 52

    (21) expression -> NUMBER .

    SEMI            reduce using rule 21 (expression -> NUMBER .)


state 53

    (22) expression -> STRING_LITERAL .

    SEMI            reduce using rule 22 (expression -> STRING_LITERAL .)


state 54

    (23) expression -> NOT . expression
    (20) expression -> . ID
    (21) expression -> . NUMBER
    (22) expression -> . STRING_LITERAL
    (23) expression -> . NOT expression

    ID              shift and go to state 49
    NUMBER          shift and go to state 52
    STRING_LITERAL  shift and go to state 53
    NOT             shift and go to state 54

    expression                     shift and go to state 80

state 55

    (8) class_body -> statements main statements .
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! reduce/reduce conflict for RBRACE resolved using rule 8 (class_body -> statements main statements .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 8 (class_body -> statements main statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]
  ! RBRACE          [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 56

    (9) main -> PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 81


state 57

    (101) array_usage -> tipo_number LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> tipo_number LBRACKET RBRACKET . ID SEMI

    ID              shift and go to state 82


state 58

    (91) dcl_variable_with_init -> tipo_number ID EQUALS . NUMBER
    (94) dcl_variable_with_init -> tipo_number ID EQUALS . suma
    (87) suma -> . NUMBER PLUS NUMBER

    NUMBER          shift and go to state 83

    suma                           shift and go to state 84

state 59

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI
    (104) array_dcl -> tipo_palabra LBRACKET RBRACKET . ID SEMI

    ID              shift and go to state 85


state 60

    (92) dcl_variable_with_init -> tipo_palabra ID EQUALS . STRING_LITERAL

    STRING_LITERAL  shift and go to state 86


state 61

    (106) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 87


state 62

    (93) dcl_variable_with_init -> tipo_booleano ID EQUALS . valor_boolean
    (99) valor_boolean -> . TRUE
    (100) valor_boolean -> . FALSE

    TRUE            shift and go to state 89
    FALSE           shift and go to state 90

    valor_boolean                  shift and go to state 88

state 63

    (64) for_statement -> FOR LPAREN inicializacion . SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> FOR LPAREN inicializacion . SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 91


state 64

    (66) for_statement -> FOR LPAREN dcl_variable . COLON ID RPAREN LBRACE statements RBRACE

    COLON           shift and go to state 92


state 65

    (67) inicializacion -> INT . ID EQUALS NUMBER
    (96) tipo_number -> INT .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 93

  ! ID              [ reduce using rule 96 (tipo_number -> INT .) ]


state 66

    (88) dcl_variable -> tipo_number . ID

    ID              shift and go to state 94


state 67

    (89) dcl_variable -> tipo_palabra . ID

    ID              shift and go to state 95


state 68

    (90) dcl_variable -> tipo_booleano . ID

    ID              shift and go to state 96


state 69

    (68) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE
    (69) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 97


state 70

    (71) if_statement -> IF LPAREN condicion_if . RPAREN LBRACE statements RBRACE
    (72) if_statement -> IF LPAREN condicion_if . RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> IF LPAREN condicion_if . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 98


state 71

    (25) condicion -> NUMBER . EQ NUMBER
    (26) condicion -> NUMBER . GT NUMBER
    (27) condicion -> NUMBER . GE NUMBER
    (28) condicion -> NUMBER . LE NUMBER
    (29) condicion -> NUMBER . LT NUMBER

    EQ              shift and go to state 99
    GT              shift and go to state 100
    GE              shift and go to state 101
    LE              shift and go to state 102
    LT              shift and go to state 103


state 72

    (46) condicion_if -> ID . EQ NUMBER
    (47) condicion_if -> ID . GT NUMBER
    (48) condicion_if -> ID . GE NUMBER
    (49) condicion_if -> ID . LE NUMBER
    (50) condicion_if -> ID . LT NUMBER
    (51) condicion_if -> ID . AND NUMBER
    (52) condicion_if -> ID . OR NUMBER
    (53) condicion_if -> ID . AND ID
    (54) condicion_if -> ID . OR ID
    (55) condicion_if -> ID . EQ ID
    (56) condicion_if -> ID . EQ STRING_LITERAL
    (57) condicion_if -> ID . EQUALS propiedades
    (58) condicion_if -> ID . GT propiedades
    (59) condicion_if -> ID . GE propiedades
    (60) condicion_if -> ID . LE propiedades
    (61) condicion_if -> ID . LT propiedades

    EQ              shift and go to state 104
    GT              shift and go to state 105
    GE              shift and go to state 106
    LE              shift and go to state 107
    LT              shift and go to state 108
    AND             shift and go to state 109
    OR              shift and go to state 110
    EQUALS          shift and go to state 111


state 73

    (86) assignment -> ID EQUALS expression SEMI .

    PUBLIC          reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    ID              reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    SYSTEM          reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    FOR             reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    IF              reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    INT             reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    DOUBLE          reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    STRING          reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    BOOLEAN         reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)
    RBRACE          reduce using rule 86 (assignment -> ID EQUALS expression SEMI .)


state 74

    (76) arg -> ID .
    (80) arg -> ID . COMMA

    RBRACE          reduce using rule 76 (arg -> ID .)
    ID              reduce using rule 76 (arg -> ID .)
    STRING_LITERAL  reduce using rule 76 (arg -> ID .)
    NUMBER          reduce using rule 76 (arg -> ID .)
    NOT             reduce using rule 76 (arg -> ID .)
    COMMA           shift and go to state 112


state 75

    (105) array_assignment -> ID EQUALS LBRACE args . RBRACE SEMI
    (75) args -> args . arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 113
    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    arg                            shift and go to state 114

state 76

    (74) args -> arg .

    RBRACE          reduce using rule 74 (args -> arg .)
    ID              reduce using rule 74 (args -> arg .)
    STRING_LITERAL  reduce using rule 74 (args -> arg .)
    NUMBER          reduce using rule 74 (args -> arg .)
    NOT             reduce using rule 74 (args -> arg .)


state 77

    (77) arg -> STRING_LITERAL .
    (81) arg -> STRING_LITERAL . COMMA

    RBRACE          reduce using rule 77 (arg -> STRING_LITERAL .)
    ID              reduce using rule 77 (arg -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 77 (arg -> STRING_LITERAL .)
    NUMBER          reduce using rule 77 (arg -> STRING_LITERAL .)
    NOT             reduce using rule 77 (arg -> STRING_LITERAL .)
    COMMA           shift and go to state 115


state 78

    (78) arg -> NUMBER .
    (82) arg -> NUMBER . COMMA

    RBRACE          reduce using rule 78 (arg -> NUMBER .)
    ID              reduce using rule 78 (arg -> NUMBER .)
    STRING_LITERAL  reduce using rule 78 (arg -> NUMBER .)
    NUMBER          reduce using rule 78 (arg -> NUMBER .)
    NOT             reduce using rule 78 (arg -> NUMBER .)
    COMMA           shift and go to state 116


state 79

    (79) arg -> NOT . arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    arg                            shift and go to state 117

state 80

    (23) expression -> NOT expression .

    SEMI            reduce using rule 23 (expression -> NOT expression .)


state 81

    (9) main -> PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 118


state 82

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> tipo_number LBRACKET RBRACKET ID . SEMI

    EQUALS          shift and go to state 119
    SEMI            shift and go to state 120


state 83

    (91) dcl_variable_with_init -> tipo_number ID EQUALS NUMBER .
    (87) suma -> NUMBER . PLUS NUMBER

    SEMI            reduce using rule 91 (dcl_variable_with_init -> tipo_number ID EQUALS NUMBER .)
    PLUS            shift and go to state 121


state 84

    (94) dcl_variable_with_init -> tipo_number ID EQUALS suma .

    SEMI            reduce using rule 94 (dcl_variable_with_init -> tipo_number ID EQUALS suma .)


state 85

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI
    (104) array_dcl -> tipo_palabra LBRACKET RBRACKET ID . SEMI

    EQUALS          shift and go to state 122
    SEMI            shift and go to state 123


state 86

    (92) dcl_variable_with_init -> tipo_palabra ID EQUALS STRING_LITERAL .

    SEMI            reduce using rule 92 (dcl_variable_with_init -> tipo_palabra ID EQUALS STRING_LITERAL .)


state 87

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PRINTLN         shift and go to state 124


state 88

    (93) dcl_variable_with_init -> tipo_booleano ID EQUALS valor_boolean .

    SEMI            reduce using rule 93 (dcl_variable_with_init -> tipo_booleano ID EQUALS valor_boolean .)


state 89

    (99) valor_boolean -> TRUE .

    SEMI            reduce using rule 99 (valor_boolean -> TRUE .)


state 90

    (100) valor_boolean -> FALSE .

    SEMI            reduce using rule 100 (valor_boolean -> FALSE .)


state 91

    (64) for_statement -> FOR LPAREN inicializacion SEMI . condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> FOR LPAREN inicializacion SEMI . condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (24) condicion -> .
    (25) condicion -> . NUMBER EQ NUMBER
    (26) condicion -> . NUMBER GT NUMBER
    (27) condicion -> . NUMBER GE NUMBER
    (28) condicion -> . NUMBER LE NUMBER
    (29) condicion -> . NUMBER LT NUMBER
    (30) condicion_var -> . ID EQ NUMBER
    (31) condicion_var -> . ID GT NUMBER
    (32) condicion_var -> . ID GE NUMBER
    (33) condicion_var -> . ID LE NUMBER
    (34) condicion_var -> . ID LT NUMBER
    (35) condicion_var -> . ID AND NUMBER
    (36) condicion_var -> . ID OR NUMBER
    (37) condicion_var -> . ID AND ID
    (38) condicion_var -> . ID OR ID
    (39) condicion_var -> . ID EQ ID
    (40) condicion_var -> . ID EQ STRING_LITERAL
    (41) condicion_var -> . ID EQUALS propiedades
    (42) condicion_var -> . ID GT propiedades
    (43) condicion_var -> . ID GE propiedades
    (44) condicion_var -> . ID LE propiedades
    (45) condicion_var -> . ID LT propiedades

    SEMI            reduce using rule 24 (condicion -> .)
    NUMBER          shift and go to state 71
    ID              shift and go to state 127

    condicion                      shift and go to state 125
    condicion_var                  shift and go to state 126

state 92

    (66) for_statement -> FOR LPAREN dcl_variable COLON . ID RPAREN LBRACE statements RBRACE

    ID              shift and go to state 128


state 93

    (67) inicializacion -> INT ID . EQUALS NUMBER

    EQUALS          shift and go to state 129


state 94

    (88) dcl_variable -> tipo_number ID .

    COLON           reduce using rule 88 (dcl_variable -> tipo_number ID .)


state 95

    (89) dcl_variable -> tipo_palabra ID .

    COLON           reduce using rule 89 (dcl_variable -> tipo_palabra ID .)


state 96

    (90) dcl_variable -> tipo_booleano ID .

    COLON           reduce using rule 90 (dcl_variable -> tipo_booleano ID .)


state 97

    (68) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE
    (69) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE statements
    (70) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 130


state 98

    (71) if_statement -> IF LPAREN condicion_if RPAREN . LBRACE statements RBRACE
    (72) if_statement -> IF LPAREN condicion_if RPAREN . LBRACE statements RBRACE ELSE statements
    (73) if_statement -> IF LPAREN condicion_if RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 131


state 99

    (25) condicion -> NUMBER EQ . NUMBER

    NUMBER          shift and go to state 132


state 100

    (26) condicion -> NUMBER GT . NUMBER

    NUMBER          shift and go to state 133


state 101

    (27) condicion -> NUMBER GE . NUMBER

    NUMBER          shift and go to state 134


state 102

    (28) condicion -> NUMBER LE . NUMBER

    NUMBER          shift and go to state 135


state 103

    (29) condicion -> NUMBER LT . NUMBER

    NUMBER          shift and go to state 136


state 104

    (46) condicion_if -> ID EQ . NUMBER
    (55) condicion_if -> ID EQ . ID
    (56) condicion_if -> ID EQ . STRING_LITERAL

    NUMBER          shift and go to state 138
    ID              shift and go to state 137
    STRING_LITERAL  shift and go to state 139


state 105

    (47) condicion_if -> ID GT . NUMBER
    (58) condicion_if -> ID GT . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 141
    ID              shift and go to state 140

    propiedades                    shift and go to state 142

state 106

    (48) condicion_if -> ID GE . NUMBER
    (59) condicion_if -> ID GE . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 143
    ID              shift and go to state 140

    propiedades                    shift and go to state 144

state 107

    (49) condicion_if -> ID LE . NUMBER
    (60) condicion_if -> ID LE . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 145
    ID              shift and go to state 140

    propiedades                    shift and go to state 146

state 108

    (50) condicion_if -> ID LT . NUMBER
    (61) condicion_if -> ID LT . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 147
    ID              shift and go to state 140

    propiedades                    shift and go to state 148

state 109

    (51) condicion_if -> ID AND . NUMBER
    (53) condicion_if -> ID AND . ID

    NUMBER          shift and go to state 150
    ID              shift and go to state 149


state 110

    (52) condicion_if -> ID OR . NUMBER
    (54) condicion_if -> ID OR . ID

    NUMBER          shift and go to state 152
    ID              shift and go to state 151


state 111

    (57) condicion_if -> ID EQUALS . propiedades
    (83) propiedades -> . ID PUNTO ID

    ID              shift and go to state 140

    propiedades                    shift and go to state 153

state 112

    (80) arg -> ID COMMA .

    RBRACE          reduce using rule 80 (arg -> ID COMMA .)
    ID              reduce using rule 80 (arg -> ID COMMA .)
    STRING_LITERAL  reduce using rule 80 (arg -> ID COMMA .)
    NUMBER          reduce using rule 80 (arg -> ID COMMA .)
    NOT             reduce using rule 80 (arg -> ID COMMA .)


state 113

    (105) array_assignment -> ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 154


state 114

    (75) args -> args arg .

    RBRACE          reduce using rule 75 (args -> args arg .)
    ID              reduce using rule 75 (args -> args arg .)
    STRING_LITERAL  reduce using rule 75 (args -> args arg .)
    NUMBER          reduce using rule 75 (args -> args arg .)
    NOT             reduce using rule 75 (args -> args arg .)


state 115

    (81) arg -> STRING_LITERAL COMMA .

    RBRACE          reduce using rule 81 (arg -> STRING_LITERAL COMMA .)
    ID              reduce using rule 81 (arg -> STRING_LITERAL COMMA .)
    STRING_LITERAL  reduce using rule 81 (arg -> STRING_LITERAL COMMA .)
    NUMBER          reduce using rule 81 (arg -> STRING_LITERAL COMMA .)
    NOT             reduce using rule 81 (arg -> STRING_LITERAL COMMA .)


state 116

    (82) arg -> NUMBER COMMA .

    RBRACE          reduce using rule 82 (arg -> NUMBER COMMA .)
    ID              reduce using rule 82 (arg -> NUMBER COMMA .)
    STRING_LITERAL  reduce using rule 82 (arg -> NUMBER COMMA .)
    NUMBER          reduce using rule 82 (arg -> NUMBER COMMA .)
    NOT             reduce using rule 82 (arg -> NUMBER COMMA .)


state 117

    (79) arg -> NOT arg .

    RBRACE          reduce using rule 79 (arg -> NOT arg .)
    ID              reduce using rule 79 (arg -> NOT arg .)
    STRING_LITERAL  reduce using rule 79 (arg -> NOT arg .)
    NUMBER          reduce using rule 79 (arg -> NOT arg .)
    NOT             reduce using rule 79 (arg -> NOT arg .)


state 118

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STRING          shift and go to state 155


state 119

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 156


state 120

    (103) array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .

    PUBLIC          reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    ID              reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    SYSTEM          reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    FOR             reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    IF              reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    INT             reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    DOUBLE          reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    STRING          reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    BOOLEAN         reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)
    RBRACE          reduce using rule 103 (array_dcl -> tipo_number LBRACKET RBRACKET ID SEMI .)


state 121

    (87) suma -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 157


state 122

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 158


state 123

    (104) array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .

    PUBLIC          reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    ID              reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    SYSTEM          reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    FOR             reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    IF              reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    INT             reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    DOUBLE          reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    STRING          reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    BOOLEAN         reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)
    RBRACE          reduce using rule 104 (array_dcl -> tipo_palabra LBRACKET RBRACKET ID SEMI .)


state 124

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    LPAREN          shift and go to state 159


state 125

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion . SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 160


state 126

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var . SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 161


state 127

    (30) condicion_var -> ID . EQ NUMBER
    (31) condicion_var -> ID . GT NUMBER
    (32) condicion_var -> ID . GE NUMBER
    (33) condicion_var -> ID . LE NUMBER
    (34) condicion_var -> ID . LT NUMBER
    (35) condicion_var -> ID . AND NUMBER
    (36) condicion_var -> ID . OR NUMBER
    (37) condicion_var -> ID . AND ID
    (38) condicion_var -> ID . OR ID
    (39) condicion_var -> ID . EQ ID
    (40) condicion_var -> ID . EQ STRING_LITERAL
    (41) condicion_var -> ID . EQUALS propiedades
    (42) condicion_var -> ID . GT propiedades
    (43) condicion_var -> ID . GE propiedades
    (44) condicion_var -> ID . LE propiedades
    (45) condicion_var -> ID . LT propiedades

    EQ              shift and go to state 162
    GT              shift and go to state 163
    GE              shift and go to state 164
    LE              shift and go to state 165
    LT              shift and go to state 166
    AND             shift and go to state 167
    OR              shift and go to state 168
    EQUALS          shift and go to state 169


state 128

    (66) for_statement -> FOR LPAREN dcl_variable COLON ID . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 170


state 129

    (67) inicializacion -> INT ID EQUALS . NUMBER

    NUMBER          shift and go to state 171


state 130

    (68) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE
    (69) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE statements
    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 172
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 131

    (71) if_statement -> IF LPAREN condicion_if RPAREN LBRACE . statements RBRACE
    (72) if_statement -> IF LPAREN condicion_if RPAREN LBRACE . statements RBRACE ELSE statements
    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 173
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 132

    (25) condicion -> NUMBER EQ NUMBER .

    RPAREN          reduce using rule 25 (condicion -> NUMBER EQ NUMBER .)
    SEMI            reduce using rule 25 (condicion -> NUMBER EQ NUMBER .)


state 133

    (26) condicion -> NUMBER GT NUMBER .

    RPAREN          reduce using rule 26 (condicion -> NUMBER GT NUMBER .)
    SEMI            reduce using rule 26 (condicion -> NUMBER GT NUMBER .)


state 134

    (27) condicion -> NUMBER GE NUMBER .

    RPAREN          reduce using rule 27 (condicion -> NUMBER GE NUMBER .)
    SEMI            reduce using rule 27 (condicion -> NUMBER GE NUMBER .)


state 135

    (28) condicion -> NUMBER LE NUMBER .

    RPAREN          reduce using rule 28 (condicion -> NUMBER LE NUMBER .)
    SEMI            reduce using rule 28 (condicion -> NUMBER LE NUMBER .)


state 136

    (29) condicion -> NUMBER LT NUMBER .

    RPAREN          reduce using rule 29 (condicion -> NUMBER LT NUMBER .)
    SEMI            reduce using rule 29 (condicion -> NUMBER LT NUMBER .)


state 137

    (55) condicion_if -> ID EQ ID .

    RPAREN          reduce using rule 55 (condicion_if -> ID EQ ID .)


state 138

    (46) condicion_if -> ID EQ NUMBER .

    RPAREN          reduce using rule 46 (condicion_if -> ID EQ NUMBER .)


state 139

    (56) condicion_if -> ID EQ STRING_LITERAL .

    RPAREN          reduce using rule 56 (condicion_if -> ID EQ STRING_LITERAL .)


state 140

    (83) propiedades -> ID . PUNTO ID

    PUNTO           shift and go to state 174


state 141

    (47) condicion_if -> ID GT NUMBER .

    RPAREN          reduce using rule 47 (condicion_if -> ID GT NUMBER .)


state 142

    (58) condicion_if -> ID GT propiedades .

    RPAREN          reduce using rule 58 (condicion_if -> ID GT propiedades .)


state 143

    (48) condicion_if -> ID GE NUMBER .

    RPAREN          reduce using rule 48 (condicion_if -> ID GE NUMBER .)


state 144

    (59) condicion_if -> ID GE propiedades .

    RPAREN          reduce using rule 59 (condicion_if -> ID GE propiedades .)


state 145

    (49) condicion_if -> ID LE NUMBER .

    RPAREN          reduce using rule 49 (condicion_if -> ID LE NUMBER .)


state 146

    (60) condicion_if -> ID LE propiedades .

    RPAREN          reduce using rule 60 (condicion_if -> ID LE propiedades .)


state 147

    (50) condicion_if -> ID LT NUMBER .

    RPAREN          reduce using rule 50 (condicion_if -> ID LT NUMBER .)


state 148

    (61) condicion_if -> ID LT propiedades .

    RPAREN          reduce using rule 61 (condicion_if -> ID LT propiedades .)


state 149

    (53) condicion_if -> ID AND ID .

    RPAREN          reduce using rule 53 (condicion_if -> ID AND ID .)


state 150

    (51) condicion_if -> ID AND NUMBER .

    RPAREN          reduce using rule 51 (condicion_if -> ID AND NUMBER .)


state 151

    (54) condicion_if -> ID OR ID .

    RPAREN          reduce using rule 54 (condicion_if -> ID OR ID .)


state 152

    (52) condicion_if -> ID OR NUMBER .

    RPAREN          reduce using rule 52 (condicion_if -> ID OR NUMBER .)


state 153

    (57) condicion_if -> ID EQUALS propiedades .

    RPAREN          reduce using rule 57 (condicion_if -> ID EQUALS propiedades .)


state 154

    (105) array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 105 (array_assignment -> ID EQUALS LBRACE args RBRACE SEMI .)


state 155

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LBRACKET        shift and go to state 175


state 156

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (74) args -> . arg
    (75) args -> . args arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    args                           shift and go to state 176
    arg                            shift and go to state 76

state 157

    (87) suma -> NUMBER PLUS NUMBER .

    SEMI            reduce using rule 87 (suma -> NUMBER PLUS NUMBER .)


state 158

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (74) args -> . arg
    (75) args -> . args arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    args                           shift and go to state 177
    arg                            shift and go to state 76

state 159

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . STRING_LITERAL RPAREN SEMI
    (107) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID LBRACKET ID RBRACKET RPAREN SEMI

    STRING_LITERAL  shift and go to state 178
    ID              shift and go to state 179


state 160

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI . increment_or_decrement RPAREN LBRACE statements RBRACE
    (62) increment_or_decrement -> . ID INCREMENT
    (63) increment_or_decrement -> . ID DECREMENT

    ID              shift and go to state 181

    increment_or_decrement         shift and go to state 180

state 161

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI . increment_or_decrement RPAREN LBRACE statements RBRACE
    (62) increment_or_decrement -> . ID INCREMENT
    (63) increment_or_decrement -> . ID DECREMENT

    ID              shift and go to state 181

    increment_or_decrement         shift and go to state 182

state 162

    (30) condicion_var -> ID EQ . NUMBER
    (39) condicion_var -> ID EQ . ID
    (40) condicion_var -> ID EQ . STRING_LITERAL

    NUMBER          shift and go to state 184
    ID              shift and go to state 183
    STRING_LITERAL  shift and go to state 185


state 163

    (31) condicion_var -> ID GT . NUMBER
    (42) condicion_var -> ID GT . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 186
    ID              shift and go to state 140

    propiedades                    shift and go to state 187

state 164

    (32) condicion_var -> ID GE . NUMBER
    (43) condicion_var -> ID GE . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 188
    ID              shift and go to state 140

    propiedades                    shift and go to state 189

state 165

    (33) condicion_var -> ID LE . NUMBER
    (44) condicion_var -> ID LE . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 190
    ID              shift and go to state 140

    propiedades                    shift and go to state 191

state 166

    (34) condicion_var -> ID LT . NUMBER
    (45) condicion_var -> ID LT . propiedades
    (83) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 192
    ID              shift and go to state 140

    propiedades                    shift and go to state 193

state 167

    (35) condicion_var -> ID AND . NUMBER
    (37) condicion_var -> ID AND . ID

    NUMBER          shift and go to state 195
    ID              shift and go to state 194


state 168

    (36) condicion_var -> ID OR . NUMBER
    (38) condicion_var -> ID OR . ID

    NUMBER          shift and go to state 197
    ID              shift and go to state 196


state 169

    (41) condicion_var -> ID EQUALS . propiedades
    (83) propiedades -> . ID PUNTO ID

    ID              shift and go to state 140

    propiedades                    shift and go to state 198

state 170

    (66) for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 199


state 171

    (67) inicializacion -> INT ID EQUALS NUMBER .

    SEMI            reduce using rule 67 (inicializacion -> INT ID EQUALS NUMBER .)


state 172

    (68) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE
    (69) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE statements
    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 200
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 173

    (71) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements . RBRACE
    (72) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements . RBRACE ELSE statements
    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 201
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 174

    (83) propiedades -> ID PUNTO . ID

    ID              shift and go to state 202


state 175

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ARGS RPAREN LBRACE statements RBRACE

    RBRACKET        shift and go to state 203


state 176

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (75) args -> args . arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 204
    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    arg                            shift and go to state 114

state 177

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (75) args -> args . arg
    (76) arg -> . ID
    (77) arg -> . STRING_LITERAL
    (78) arg -> . NUMBER
    (79) arg -> . NOT arg
    (80) arg -> . ID COMMA
    (81) arg -> . STRING_LITERAL COMMA
    (82) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 205
    ID              shift and go to state 74
    STRING_LITERAL  shift and go to state 77
    NUMBER          shift and go to state 78
    NOT             shift and go to state 79

    arg                            shift and go to state 114

state 178

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL . RPAREN SEMI

    RPAREN          shift and go to state 206


state 179

    (107) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . RPAREN SEMI
    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . LBRACKET ID RBRACKET RPAREN SEMI

    RPAREN          shift and go to state 207
    LBRACKET        shift and go to state 208


state 180

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 209


state 181

    (62) increment_or_decrement -> ID . INCREMENT
    (63) increment_or_decrement -> ID . DECREMENT

    INCREMENT       shift and go to state 210
    DECREMENT       shift and go to state 211


state 182

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 212


state 183

    (39) condicion_var -> ID EQ ID .

    SEMI            reduce using rule 39 (condicion_var -> ID EQ ID .)


state 184

    (30) condicion_var -> ID EQ NUMBER .

    SEMI            reduce using rule 30 (condicion_var -> ID EQ NUMBER .)


state 185

    (40) condicion_var -> ID EQ STRING_LITERAL .

    SEMI            reduce using rule 40 (condicion_var -> ID EQ STRING_LITERAL .)


state 186

    (31) condicion_var -> ID GT NUMBER .

    SEMI            reduce using rule 31 (condicion_var -> ID GT NUMBER .)


state 187

    (42) condicion_var -> ID GT propiedades .

    SEMI            reduce using rule 42 (condicion_var -> ID GT propiedades .)


state 188

    (32) condicion_var -> ID GE NUMBER .

    SEMI            reduce using rule 32 (condicion_var -> ID GE NUMBER .)


state 189

    (43) condicion_var -> ID GE propiedades .

    SEMI            reduce using rule 43 (condicion_var -> ID GE propiedades .)


state 190

    (33) condicion_var -> ID LE NUMBER .

    SEMI            reduce using rule 33 (condicion_var -> ID LE NUMBER .)


state 191

    (44) condicion_var -> ID LE propiedades .

    SEMI            reduce using rule 44 (condicion_var -> ID LE propiedades .)


state 192

    (34) condicion_var -> ID LT NUMBER .

    SEMI            reduce using rule 34 (condicion_var -> ID LT NUMBER .)


state 193

    (45) condicion_var -> ID LT propiedades .

    SEMI            reduce using rule 45 (condicion_var -> ID LT propiedades .)


state 194

    (37) condicion_var -> ID AND ID .

    SEMI            reduce using rule 37 (condicion_var -> ID AND ID .)


state 195

    (35) condicion_var -> ID AND NUMBER .

    SEMI            reduce using rule 35 (condicion_var -> ID AND NUMBER .)


state 196

    (38) condicion_var -> ID OR ID .

    SEMI            reduce using rule 38 (condicion_var -> ID OR ID .)


state 197

    (36) condicion_var -> ID OR NUMBER .

    SEMI            reduce using rule 36 (condicion_var -> ID OR NUMBER .)


state 198

    (41) condicion_var -> ID EQUALS propiedades .

    SEMI            reduce using rule 41 (condicion_var -> ID EQUALS propiedades .)


state 199

    (66) for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    dcl_variable                   shift and go to state 21
    statements                     shift and go to state 213
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 200

    (68) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .
    (69) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE statements
    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    PUBLIC          reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 68 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 214


state 201

    (71) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .
    (72) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE . ELSE statements
    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    PUBLIC          reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 71 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 215


state 202

    (83) propiedades -> ID PUNTO ID .

    RPAREN          reduce using rule 83 (propiedades -> ID PUNTO ID .)
    SEMI            reduce using rule 83 (propiedades -> ID PUNTO ID .)


state 203

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ARGS RPAREN LBRACE statements RBRACE

    ARGS            shift and go to state 216


state 204

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 217


state 205

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 218


state 206

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN . SEMI

    SEMI            shift and go to state 219


state 207

    (107) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 220


state 208

    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET . ID RBRACKET RPAREN SEMI

    ID              shift and go to state 221


state 209

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 222


state 210

    (62) increment_or_decrement -> ID INCREMENT .

    RPAREN          reduce using rule 62 (increment_or_decrement -> ID INCREMENT .)


state 211

    (63) increment_or_decrement -> ID DECREMENT .

    RPAREN          reduce using rule 63 (increment_or_decrement -> ID DECREMENT .)


state 212

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 223


state 213

    (66) for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 224
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    dcl_variable                   shift and go to state 21
    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 214

    (69) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . statements
    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    LBRACE          shift and go to state 225
    PUBLIC          reduce using rule 109 (empty -> .)
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 226
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 215

    (72) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE . statements
    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    LBRACE          shift and go to state 227
    PUBLIC          reduce using rule 109 (empty -> .)
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 228
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 216

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 229


state 217

    (101) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 101 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 218

    (102) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 102 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 219

    (106) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .

    PUBLIC          reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    ID              reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    SYSTEM          reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    FOR             reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    IF              reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    INT             reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    DOUBLE          reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    STRING          reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    BOOLEAN         reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    RBRACE          reduce using rule 106 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)


state 220

    (107) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .

    PUBLIC          reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    SYSTEM          reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    FOR             reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    IF              reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    INT             reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    DOUBLE          reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    STRING          reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    RBRACE          reduce using rule 107 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)


state 221

    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID . RBRACKET RPAREN SEMI

    RBRACKET        shift and go to state 230


state 222

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 231
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 223

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 232
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 224

    (66) for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 66 (for_statement -> FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE .)


state 225

    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 233
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 226

    (69) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! reduce/reduce conflict for ID resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for SYSTEM resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for FOR resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for IF resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for INT resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for STRING resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for RBRACE resolved using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    PUBLIC          reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    RBRACE          reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! SYSTEM          [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! FOR             [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! IF              [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! INT             [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! DOUBLE          [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! STRING          [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! BOOLEAN         [ reduce using rule 69 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 109 (empty -> .) ]
  ! RBRACE          [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 227

    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 234
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 228

    (72) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! reduce/reduce conflict for ID resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for SYSTEM resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for FOR resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for IF resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for INT resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for STRING resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! reduce/reduce conflict for RBRACE resolved using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    PUBLIC          reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
    RBRACE          reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! SYSTEM          [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! FOR             [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! IF              [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! INT             [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! DOUBLE          [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! STRING          [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! BOOLEAN         [ reduce using rule 72 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 109 (empty -> .) ]
  ! RBRACE          [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 229

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 235


state 230

    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET . RPAREN SEMI

    RPAREN          shift and go to state 236


state 231

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 237
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 232

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 238
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 233

    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 239
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 234

    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 240
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 235

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE . statements RBRACE
    (84) statements -> . statement
    (85) statements -> . statements statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 109 (empty -> .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statements                     shift and go to state 241
    statement                      shift and go to state 12
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 236

    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN . SEMI

    SEMI            shift and go to state 242


state 237

    (64) for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 64 (for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)


state 238

    (65) for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 65 (for_statement -> FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)


state 239

    (70) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    PUBLIC          reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 70 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 240

    (73) if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    PUBLIC          reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 73 (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 241

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements . RBRACE
    (85) statements -> statements . statement
    (10) statement -> . empty
    (11) statement -> . assignment
    (12) statement -> . array_usage
    (13) statement -> . array_dcl
    (14) statement -> . array_assignment
    (15) statement -> . print_statement
    (16) statement -> . dcl_variable SEMI
    (17) statement -> . dcl_variable_with_init SEMI
    (18) statement -> . for_statement
    (19) statement -> . if_statement
    (109) empty -> .
    (86) assignment -> . ID EQUALS expression SEMI
    (101) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (102) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (103) array_dcl -> . tipo_number LBRACKET RBRACKET ID SEMI
    (104) array_dcl -> . tipo_palabra LBRACKET RBRACKET ID SEMI
    (105) array_assignment -> . ID EQUALS LBRACE args RBRACE SEMI
    (106) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (107) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (108) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (88) dcl_variable -> . tipo_number ID
    (89) dcl_variable -> . tipo_palabra ID
    (90) dcl_variable -> . tipo_booleano ID
    (91) dcl_variable_with_init -> . tipo_number ID EQUALS NUMBER
    (92) dcl_variable_with_init -> . tipo_palabra ID EQUALS STRING_LITERAL
    (93) dcl_variable_with_init -> . tipo_booleano ID EQUALS valor_boolean
    (94) dcl_variable_with_init -> . tipo_number ID EQUALS suma
    (64) for_statement -> . FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (65) for_statement -> . FOR LPAREN inicializacion SEMI condicion_var SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (66) for_statement -> . FOR LPAREN dcl_variable COLON ID RPAREN LBRACE statements RBRACE
    (68) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (69) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (70) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (71) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE
    (72) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements
    (73) if_statement -> . IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (96) tipo_number -> . INT
    (97) tipo_number -> . DOUBLE
    (98) tipo_palabra -> . STRING
    (95) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          shift and go to state 243
    ID              shift and go to state 7
    SYSTEM          shift and go to state 27
    FOR             shift and go to state 29
    IF              shift and go to state 30
    INT             shift and go to state 31
    DOUBLE          shift and go to state 32
    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 33

  ! RBRACE          [ reduce using rule 109 (empty -> .) ]
  ! ID              [ reduce using rule 109 (empty -> .) ]
  ! SYSTEM          [ reduce using rule 109 (empty -> .) ]
  ! FOR             [ reduce using rule 109 (empty -> .) ]
  ! IF              [ reduce using rule 109 (empty -> .) ]
  ! INT             [ reduce using rule 109 (empty -> .) ]
  ! DOUBLE          [ reduce using rule 109 (empty -> .) ]
  ! STRING          [ reduce using rule 109 (empty -> .) ]
  ! BOOLEAN         [ reduce using rule 109 (empty -> .) ]

    statement                      shift and go to state 37
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    array_usage                    shift and go to state 17
    array_dcl                      shift and go to state 18
    array_assignment               shift and go to state 19
    print_statement                shift and go to state 20
    dcl_variable                   shift and go to state 21
    dcl_variable_with_init         shift and go to state 22
    for_statement                  shift and go to state 23
    if_statement                   shift and go to state 24
    tipo_number                    shift and go to state 25
    tipo_palabra                   shift and go to state 26
    tipo_booleano                  shift and go to state 28

state 242

    (108) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .

    PUBLIC          reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    ID              reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    SYSTEM          reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    FOR             reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    IF              reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    INT             reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    DOUBLE          reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    STRING          reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    BOOLEAN         reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    RBRACE          reduce using rule 108 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)


state 243

    (9) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 9 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUBLIC in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 6 resolved as shift
WARNING: shift/reduce conflict for FOR in state 6 resolved as shift
WARNING: shift/reduce conflict for IF in state 6 resolved as shift
WARNING: shift/reduce conflict for INT in state 6 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 6 resolved as shift
WARNING: shift/reduce conflict for STRING in state 6 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 6 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 9 resolved as shift
WARNING: shift/reduce conflict for FOR in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 9 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 36 resolved as shift
WARNING: shift/reduce conflict for FOR in state 36 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for INT in state 36 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 36 resolved as shift
WARNING: shift/reduce conflict for STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for INT in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 130 resolved as shift
WARNING: shift/reduce conflict for FOR in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for INT in state 130 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 130 resolved as shift
WARNING: shift/reduce conflict for STRING in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 131 resolved as shift
WARNING: shift/reduce conflict for FOR in state 131 resolved as shift
WARNING: shift/reduce conflict for IF in state 131 resolved as shift
WARNING: shift/reduce conflict for INT in state 131 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 131 resolved as shift
WARNING: shift/reduce conflict for STRING in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 131 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 172 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 173 resolved as shift
WARNING: shift/reduce conflict for FOR in state 173 resolved as shift
WARNING: shift/reduce conflict for IF in state 173 resolved as shift
WARNING: shift/reduce conflict for INT in state 173 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 173 resolved as shift
WARNING: shift/reduce conflict for STRING in state 173 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for INT in state 199 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 199 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 213 resolved as shift
WARNING: shift/reduce conflict for FOR in state 213 resolved as shift
WARNING: shift/reduce conflict for IF in state 213 resolved as shift
WARNING: shift/reduce conflict for INT in state 213 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 213 resolved as shift
WARNING: shift/reduce conflict for STRING in state 213 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 214 resolved as shift
WARNING: shift/reduce conflict for FOR in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for INT in state 214 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 214 resolved as shift
WARNING: shift/reduce conflict for STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 215 resolved as shift
WARNING: shift/reduce conflict for FOR in state 215 resolved as shift
WARNING: shift/reduce conflict for IF in state 215 resolved as shift
WARNING: shift/reduce conflict for INT in state 215 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 215 resolved as shift
WARNING: shift/reduce conflict for STRING in state 215 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 222 resolved as shift
WARNING: shift/reduce conflict for FOR in state 222 resolved as shift
WARNING: shift/reduce conflict for IF in state 222 resolved as shift
WARNING: shift/reduce conflict for INT in state 222 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 222 resolved as shift
WARNING: shift/reduce conflict for STRING in state 222 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 223 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 223 resolved as shift
WARNING: shift/reduce conflict for FOR in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for INT in state 223 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 223 resolved as shift
WARNING: shift/reduce conflict for STRING in state 223 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 223 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 225 resolved as shift
WARNING: shift/reduce conflict for FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for INT in state 225 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 225 resolved as shift
WARNING: shift/reduce conflict for STRING in state 225 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 226 resolved as shift
WARNING: shift/reduce conflict for FOR in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for INT in state 226 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 226 resolved as shift
WARNING: shift/reduce conflict for STRING in state 226 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 227 resolved as shift
WARNING: shift/reduce conflict for FOR in state 227 resolved as shift
WARNING: shift/reduce conflict for IF in state 227 resolved as shift
WARNING: shift/reduce conflict for INT in state 227 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 227 resolved as shift
WARNING: shift/reduce conflict for STRING in state 227 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 228 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 228 resolved as shift
WARNING: shift/reduce conflict for FOR in state 228 resolved as shift
WARNING: shift/reduce conflict for IF in state 228 resolved as shift
WARNING: shift/reduce conflict for INT in state 228 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 228 resolved as shift
WARNING: shift/reduce conflict for STRING in state 228 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 228 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 231 resolved as shift
WARNING: shift/reduce conflict for ID in state 231 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 231 resolved as shift
WARNING: shift/reduce conflict for FOR in state 231 resolved as shift
WARNING: shift/reduce conflict for IF in state 231 resolved as shift
WARNING: shift/reduce conflict for INT in state 231 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 231 resolved as shift
WARNING: shift/reduce conflict for STRING in state 231 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 231 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 232 resolved as shift
WARNING: shift/reduce conflict for ID in state 232 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 232 resolved as shift
WARNING: shift/reduce conflict for FOR in state 232 resolved as shift
WARNING: shift/reduce conflict for IF in state 232 resolved as shift
WARNING: shift/reduce conflict for INT in state 232 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 232 resolved as shift
WARNING: shift/reduce conflict for STRING in state 232 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 232 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 233 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 233 resolved as shift
WARNING: shift/reduce conflict for FOR in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for INT in state 233 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 233 resolved as shift
WARNING: shift/reduce conflict for STRING in state 233 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 233 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 234 resolved as shift
WARNING: shift/reduce conflict for ID in state 234 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 234 resolved as shift
WARNING: shift/reduce conflict for FOR in state 234 resolved as shift
WARNING: shift/reduce conflict for IF in state 234 resolved as shift
WARNING: shift/reduce conflict for INT in state 234 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 234 resolved as shift
WARNING: shift/reduce conflict for STRING in state 234 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 234 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 235 resolved as shift
WARNING: shift/reduce conflict for FOR in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for INT in state 235 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 235 resolved as shift
WARNING: shift/reduce conflict for STRING in state 235 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 235 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 241 resolved as shift
WARNING: shift/reduce conflict for ID in state 241 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 241 resolved as shift
WARNING: shift/reduce conflict for FOR in state 241 resolved as shift
WARNING: shift/reduce conflict for IF in state 241 resolved as shift
WARNING: shift/reduce conflict for INT in state 241 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 241 resolved as shift
WARNING: shift/reduce conflict for STRING in state 241 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 241 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (class_body -> statements)
WARNING: rejected rule (empty -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 36 resolved using rule (class_body -> statements main)
WARNING: rejected rule (empty -> <empty>) in state 36
WARNING: reduce/reduce conflict in state 55 resolved using rule (class_body -> statements main statements)
WARNING: rejected rule (empty -> <empty>) in state 55
WARNING: reduce/reduce conflict in state 226 resolved using rule (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements)
WARNING: rejected rule (empty -> <empty>) in state 226
WARNING: reduce/reduce conflict in state 228 resolved using rule (if_statement -> IF LPAREN condicion_if RPAREN LBRACE statements RBRACE ELSE statements)
WARNING: rejected rule (empty -> <empty>) in state 228
