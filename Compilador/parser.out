Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQUAL
    CHAR
    CHARACTER
    DIVEQUAL
    DIVIDE
    DO
    FLOAT
    INCLUDE
    INTEGER
    LAND
    LNOT
    LOR
    LSHIFT
    LSHIFTEQUAL
    MINUS
    MINUSEQUAL
    MODEQUAL
    MODULO
    NE
    OREQUAL
    PACKAGE
    PLUS
    PLUSEQUAL
    RETURN
    RSHIFT
    RSHIFTEQUAL
    TERNARY
    TIMES
    TIMESEQUAL
    TYPEID
    WHILE
    XOR
    XOREQUAL

Grammar

Rule 0     S' -> program
Rule 1     program -> class_declaration
Rule 2     program -> program class_declaration
Rule 3     class_declaration -> CLASS ID LBRACE class_body RBRACE
Rule 4     class_body -> statement main
Rule 5     class_body -> class_body statement
Rule 6     class_body -> main
Rule 7     class_body -> statement class_body
Rule 8     main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
Rule 9     statement -> assignment
Rule 10    statement -> array_usage
Rule 11    statement -> print_statement
Rule 12    statement -> dcl_variable SEMI
Rule 13    statement -> for_statement
Rule 14    statement -> if_statement
Rule 15    expression -> ID
Rule 16    expression -> NUMBER
Rule 17    expression -> ID EQUALS propiedades
Rule 18    expression -> ID GT propiedades
Rule 19    expression -> ID GE propiedades
Rule 20    expression -> ID LE propiedades
Rule 21    expression -> ID LT propiedades
Rule 22    expression -> NOT expression
Rule 23    condicion -> ID EQUALS NUMBER
Rule 24    condicion -> ID GT NUMBER
Rule 25    condicion -> ID GE NUMBER
Rule 26    condicion -> ID LE NUMBER
Rule 27    condicion -> ID LT NUMBER
Rule 28    condicion -> ID AND NUMBER
Rule 29    condicion -> ID OR NUMBER
Rule 30    condicion -> NUMBER EQUALS NUMBER
Rule 31    condicion -> NUMBER GT NUMBER
Rule 32    condicion -> NUMBER GE NUMBER
Rule 33    condicion -> NUMBER LE NUMBER
Rule 34    condicion -> NUMBER LT NUMBER
Rule 35    condicion -> ID AND ID
Rule 36    condicion -> ID OR ID
Rule 37    condicion -> ID EQ ID
Rule 38    condicion -> ID EQ STRING_LITERAL
Rule 39    increment_or_decrement -> ID INCREMENT
Rule 40    increment_or_decrement -> ID DECREMENT
Rule 41    for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
Rule 42    for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
Rule 43    for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
Rule 44    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE
Rule 45    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
Rule 46    if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 47    args -> arg
Rule 48    args -> args arg
Rule 49    arg -> ID
Rule 50    arg -> STRING_LITERAL
Rule 51    arg -> NUMBER
Rule 52    arg -> NOT arg
Rule 53    arg -> ID COMMA
Rule 54    arg -> STRING_LITERAL COMMA
Rule 55    arg -> NUMBER COMMA
Rule 56    propiedades -> ID PUNTO ID
Rule 57    statements -> statement
Rule 58    statements -> statements statement
Rule 59    assignment -> ID EQUALS expression SEMI
Rule 60    dcl_variable -> tipo_number ID EQUALS NUMBER
Rule 61    dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL
Rule 62    dcl_variable -> tipo_booleano ID EQUALS valor_boolean
Rule 63    tipo_booleano -> BOOLEAN
Rule 64    tipo_number -> INT
Rule 65    tipo_number -> DOUBLE
Rule 66    tipo_palabra -> STRING
Rule 67    valor_boolean -> TRUE
Rule 68    valor_boolean -> FALSE
Rule 69    array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 70    array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
Rule 71    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
Rule 72    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
Rule 73    print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
Rule 74    empty -> <empty>

Terminals, with rules where they appear

AND                  : 28 35
ANDEQUAL             : 
ARGS                 : 8
BOOLEAN              : 63
CHAR                 : 
CHARACTER            : 
CLASS                : 3
COLON                : 43
COMMA                : 53 54 55
DECREMENT            : 40
DIVEQUAL             : 
DIVIDE               : 
DO                   : 
DOUBLE               : 65
ELSE                 : 45 46
EQ                   : 37 38
EQUALS               : 17 23 30 41 42 59 60 61 62 69 70
FALSE                : 68
FLOAT                : 
FOR                  : 41 42 43
GE                   : 19 25 32
GT                   : 18 24 31
ID                   : 3 15 17 18 19 20 21 23 24 25 26 27 28 29 35 35 36 36 37 37 38 39 40 41 42 43 43 49 53 56 56 59 60 61 62 69 70 72 73 73
IF                   : 44 45 46
INCLUDE              : 
INCREMENT            : 39
INT                  : 41 42 64
INTEGER              : 
LAND                 : 
LBRACE               : 3 8 41 42 43 44 45 46 46 69 70
LBRACKET             : 8 69 70 73
LE                   : 20 26 33
LNOT                 : 
LOR                  : 
LPAREN               : 8 41 42 43 44 45 46 71 72 73
LSHIFT               : 
LSHIFTEQUAL          : 
LT                   : 21 27 34
MAIN                 : 8
MINUS                : 
MINUSEQUAL           : 
MODEQUAL             : 
MODULO               : 
NE                   : 
NOT                  : 22 52
NUMBER               : 16 23 24 25 26 27 28 29 30 30 31 31 32 32 33 33 34 34 41 42 51 55 60
OR                   : 29 36
OREQUAL              : 
OUT                  : 71 72 73
PACKAGE              : 
PLUS                 : 
PLUSEQUAL            : 
PRINTLN              : 71 72 73
PUBLIC               : 8
PUNTO                : 56 71 71 72 72 73 73
RBRACE               : 3 8 41 42 43 44 45 46 46 69 70
RBRACKET             : 8 69 70 73
RETURN               : 
RPAREN               : 8 41 42 43 44 45 46 71 72 73
RSHIFT               : 
RSHIFTEQUAL          : 
SEMI                 : 12 41 41 42 42 59 69 70 71 72 73
STATIC               : 8
STRING               : 8 66
STRING_LITERAL       : 38 50 54 61 71
SYSTEM               : 71 72 73
TERNARY              : 
TIMES                : 
TIMESEQUAL           : 
TRUE                 : 67
TYPEID               : 
VOID                 : 8
WHILE                : 
XOR                  : 
XOREQUAL             : 
error                : 

Nonterminals, with rules where they appear

arg                  : 47 48 52
args                 : 48 69 70
array_usage          : 10
assignment           : 9
class_body           : 3 5 7
class_declaration    : 1 2
condicion            : 41 44 45 46
dcl_variable         : 12
empty                : 
expression           : 22 42 59
for_statement        : 13
if_statement         : 14
increment_or_decrement : 41 42
main                 : 4 6
print_statement      : 11
program              : 2 0
propiedades          : 17 18 19 20 21
statement            : 4 5 7 57 58
statements           : 8 41 42 43 44 45 45 46 46 58
tipo_booleano        : 62
tipo_number          : 60 69
tipo_palabra         : 43 61 70
valor_boolean        : 62

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_declaration
    (2) program -> . program class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    program                        shift and go to state 1
    class_declaration              shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . class_declaration
    (3) class_declaration -> . CLASS ID LBRACE class_body RBRACE

    CLASS           shift and go to state 3

    class_declaration              shift and go to state 4

state 2

    (1) program -> class_declaration .

    CLASS           reduce using rule 1 (program -> class_declaration .)
    $end            reduce using rule 1 (program -> class_declaration .)


state 3

    (3) class_declaration -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 5


state 4

    (2) program -> program class_declaration .

    CLASS           reduce using rule 2 (program -> program class_declaration .)
    $end            reduce using rule 2 (program -> program class_declaration .)


state 5

    (3) class_declaration -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 6


state 6

    (3) class_declaration -> CLASS ID LBRACE . class_body RBRACE
    (4) class_body -> . statement main
    (5) class_body -> . class_body statement
    (6) class_body -> . main
    (7) class_body -> . statement class_body
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (8) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    PUBLIC          shift and go to state 17
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    class_body                     shift and go to state 8
    statement                      shift and go to state 9
    main                           shift and go to state 10
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 7

    (59) assignment -> ID . EQUALS expression SEMI

    EQUALS          shift and go to state 28


state 8

    (3) class_declaration -> CLASS ID LBRACE class_body . RBRACE
    (5) class_body -> class_body . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 29
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 30
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 9

    (4) class_body -> statement . main
    (7) class_body -> statement . class_body
    (8) main -> . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE
    (4) class_body -> . statement main
    (5) class_body -> . class_body statement
    (6) class_body -> . main
    (7) class_body -> . statement class_body
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    PUBLIC          shift and go to state 17
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 9
    main                           shift and go to state 31
    class_body                     shift and go to state 32
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 10

    (6) class_body -> main .

    RBRACE          reduce using rule 6 (class_body -> main .)
    ID              reduce using rule 6 (class_body -> main .)
    SYSTEM          reduce using rule 6 (class_body -> main .)
    FOR             reduce using rule 6 (class_body -> main .)
    IF              reduce using rule 6 (class_body -> main .)
    INT             reduce using rule 6 (class_body -> main .)
    DOUBLE          reduce using rule 6 (class_body -> main .)
    STRING          reduce using rule 6 (class_body -> main .)
    BOOLEAN         reduce using rule 6 (class_body -> main .)


state 11

    (9) statement -> assignment .

    PUBLIC          reduce using rule 9 (statement -> assignment .)
    ID              reduce using rule 9 (statement -> assignment .)
    SYSTEM          reduce using rule 9 (statement -> assignment .)
    FOR             reduce using rule 9 (statement -> assignment .)
    IF              reduce using rule 9 (statement -> assignment .)
    INT             reduce using rule 9 (statement -> assignment .)
    DOUBLE          reduce using rule 9 (statement -> assignment .)
    STRING          reduce using rule 9 (statement -> assignment .)
    BOOLEAN         reduce using rule 9 (statement -> assignment .)
    RBRACE          reduce using rule 9 (statement -> assignment .)


state 12

    (10) statement -> array_usage .

    PUBLIC          reduce using rule 10 (statement -> array_usage .)
    ID              reduce using rule 10 (statement -> array_usage .)
    SYSTEM          reduce using rule 10 (statement -> array_usage .)
    FOR             reduce using rule 10 (statement -> array_usage .)
    IF              reduce using rule 10 (statement -> array_usage .)
    INT             reduce using rule 10 (statement -> array_usage .)
    DOUBLE          reduce using rule 10 (statement -> array_usage .)
    STRING          reduce using rule 10 (statement -> array_usage .)
    BOOLEAN         reduce using rule 10 (statement -> array_usage .)
    RBRACE          reduce using rule 10 (statement -> array_usage .)


state 13

    (11) statement -> print_statement .

    PUBLIC          reduce using rule 11 (statement -> print_statement .)
    ID              reduce using rule 11 (statement -> print_statement .)
    SYSTEM          reduce using rule 11 (statement -> print_statement .)
    FOR             reduce using rule 11 (statement -> print_statement .)
    IF              reduce using rule 11 (statement -> print_statement .)
    INT             reduce using rule 11 (statement -> print_statement .)
    DOUBLE          reduce using rule 11 (statement -> print_statement .)
    STRING          reduce using rule 11 (statement -> print_statement .)
    BOOLEAN         reduce using rule 11 (statement -> print_statement .)
    RBRACE          reduce using rule 11 (statement -> print_statement .)


state 14

    (12) statement -> dcl_variable . SEMI

    SEMI            shift and go to state 33


state 15

    (13) statement -> for_statement .

    PUBLIC          reduce using rule 13 (statement -> for_statement .)
    ID              reduce using rule 13 (statement -> for_statement .)
    SYSTEM          reduce using rule 13 (statement -> for_statement .)
    FOR             reduce using rule 13 (statement -> for_statement .)
    IF              reduce using rule 13 (statement -> for_statement .)
    INT             reduce using rule 13 (statement -> for_statement .)
    DOUBLE          reduce using rule 13 (statement -> for_statement .)
    STRING          reduce using rule 13 (statement -> for_statement .)
    BOOLEAN         reduce using rule 13 (statement -> for_statement .)
    RBRACE          reduce using rule 13 (statement -> for_statement .)


state 16

    (14) statement -> if_statement .

    PUBLIC          reduce using rule 14 (statement -> if_statement .)
    ID              reduce using rule 14 (statement -> if_statement .)
    SYSTEM          reduce using rule 14 (statement -> if_statement .)
    FOR             reduce using rule 14 (statement -> if_statement .)
    IF              reduce using rule 14 (statement -> if_statement .)
    INT             reduce using rule 14 (statement -> if_statement .)
    DOUBLE          reduce using rule 14 (statement -> if_statement .)
    STRING          reduce using rule 14 (statement -> if_statement .)
    BOOLEAN         reduce using rule 14 (statement -> if_statement .)
    RBRACE          reduce using rule 14 (statement -> if_statement .)


state 17

    (8) main -> PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STATIC          shift and go to state 34


state 18

    (66) tipo_palabra -> STRING .

    LBRACKET        reduce using rule 66 (tipo_palabra -> STRING .)
    ID              reduce using rule 66 (tipo_palabra -> STRING .)


state 19

    (69) array_usage -> tipo_number . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (60) dcl_variable -> tipo_number . ID EQUALS NUMBER

    LBRACKET        shift and go to state 35
    ID              shift and go to state 36


state 20

    (70) array_usage -> tipo_palabra . LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (61) dcl_variable -> tipo_palabra . ID EQUALS STRING_LITERAL

    LBRACKET        shift and go to state 37
    ID              shift and go to state 38


state 21

    (71) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> SYSTEM . PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 39


state 22

    (62) dcl_variable -> tipo_booleano . ID EQUALS valor_boolean

    ID              shift and go to state 40


state 23

    (41) for_statement -> FOR . LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR . LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> FOR . LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 41


state 24

    (64) tipo_number -> INT .

    LBRACKET        reduce using rule 64 (tipo_number -> INT .)
    ID              reduce using rule 64 (tipo_number -> INT .)


state 25

    (44) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> IF . LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 42


state 26

    (65) tipo_number -> DOUBLE .

    LBRACKET        reduce using rule 65 (tipo_number -> DOUBLE .)
    ID              reduce using rule 65 (tipo_number -> DOUBLE .)


state 27

    (63) tipo_booleano -> BOOLEAN .

    ID              reduce using rule 63 (tipo_booleano -> BOOLEAN .)


state 28

    (59) assignment -> ID EQUALS . expression SEMI
    (15) expression -> . ID
    (16) expression -> . NUMBER
    (17) expression -> . ID EQUALS propiedades
    (18) expression -> . ID GT propiedades
    (19) expression -> . ID GE propiedades
    (20) expression -> . ID LE propiedades
    (21) expression -> . ID LT propiedades
    (22) expression -> . NOT expression

    ID              shift and go to state 43
    NUMBER          shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 44

state 29

    (3) class_declaration -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 3 (class_declaration -> CLASS ID LBRACE class_body RBRACE .)


state 30

    (5) class_body -> class_body statement .

    RBRACE          reduce using rule 5 (class_body -> class_body statement .)
    ID              reduce using rule 5 (class_body -> class_body statement .)
    SYSTEM          reduce using rule 5 (class_body -> class_body statement .)
    FOR             reduce using rule 5 (class_body -> class_body statement .)
    IF              reduce using rule 5 (class_body -> class_body statement .)
    INT             reduce using rule 5 (class_body -> class_body statement .)
    DOUBLE          reduce using rule 5 (class_body -> class_body statement .)
    STRING          reduce using rule 5 (class_body -> class_body statement .)
    BOOLEAN         reduce using rule 5 (class_body -> class_body statement .)


state 31

    (4) class_body -> statement main .
    (6) class_body -> main .

  ! reduce/reduce conflict for ID resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for SYSTEM resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for IF resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for INT resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for STRING resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 4 (class_body -> statement main .)
  ! reduce/reduce conflict for RBRACE resolved using rule 4 (class_body -> statement main .)
    RBRACE          reduce using rule 4 (class_body -> statement main .)
    ID              reduce using rule 4 (class_body -> statement main .)
    SYSTEM          reduce using rule 4 (class_body -> statement main .)
    FOR             reduce using rule 4 (class_body -> statement main .)
    IF              reduce using rule 4 (class_body -> statement main .)
    INT             reduce using rule 4 (class_body -> statement main .)
    DOUBLE          reduce using rule 4 (class_body -> statement main .)
    STRING          reduce using rule 4 (class_body -> statement main .)
    BOOLEAN         reduce using rule 4 (class_body -> statement main .)

  ! ID              [ reduce using rule 6 (class_body -> main .) ]
  ! SYSTEM          [ reduce using rule 6 (class_body -> main .) ]
  ! FOR             [ reduce using rule 6 (class_body -> main .) ]
  ! IF              [ reduce using rule 6 (class_body -> main .) ]
  ! INT             [ reduce using rule 6 (class_body -> main .) ]
  ! DOUBLE          [ reduce using rule 6 (class_body -> main .) ]
  ! STRING          [ reduce using rule 6 (class_body -> main .) ]
  ! BOOLEAN         [ reduce using rule 6 (class_body -> main .) ]
  ! RBRACE          [ reduce using rule 6 (class_body -> main .) ]


state 32

    (7) class_body -> statement class_body .
    (5) class_body -> class_body . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    RBRACE          reduce using rule 7 (class_body -> statement class_body .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

  ! ID              [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! SYSTEM          [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! FOR             [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! IF              [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! INT             [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! DOUBLE          [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! STRING          [ reduce using rule 7 (class_body -> statement class_body .) ]
  ! BOOLEAN         [ reduce using rule 7 (class_body -> statement class_body .) ]

    statement                      shift and go to state 30
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 33

    (12) statement -> dcl_variable SEMI .

    PUBLIC          reduce using rule 12 (statement -> dcl_variable SEMI .)
    ID              reduce using rule 12 (statement -> dcl_variable SEMI .)
    SYSTEM          reduce using rule 12 (statement -> dcl_variable SEMI .)
    FOR             reduce using rule 12 (statement -> dcl_variable SEMI .)
    IF              reduce using rule 12 (statement -> dcl_variable SEMI .)
    INT             reduce using rule 12 (statement -> dcl_variable SEMI .)
    DOUBLE          reduce using rule 12 (statement -> dcl_variable SEMI .)
    STRING          reduce using rule 12 (statement -> dcl_variable SEMI .)
    BOOLEAN         reduce using rule 12 (statement -> dcl_variable SEMI .)
    RBRACE          reduce using rule 12 (statement -> dcl_variable SEMI .)


state 34

    (8) main -> PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    VOID            shift and go to state 47


state 35

    (69) array_usage -> tipo_number LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI

    RBRACKET        shift and go to state 48


state 36

    (60) dcl_variable -> tipo_number ID . EQUALS NUMBER

    EQUALS          shift and go to state 49


state 37

    (70) array_usage -> tipo_palabra LBRACKET . RBRACKET ID EQUALS LBRACE args RBRACE SEMI

    RBRACKET        shift and go to state 50


state 38

    (61) dcl_variable -> tipo_palabra ID . EQUALS STRING_LITERAL

    EQUALS          shift and go to state 51


state 39

    (71) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO . OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    OUT             shift and go to state 52


state 40

    (62) dcl_variable -> tipo_booleano ID . EQUALS valor_boolean

    EQUALS          shift and go to state 53


state 41

    (41) for_statement -> FOR LPAREN . INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN . INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> FOR LPAREN . tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (66) tipo_palabra -> . STRING

    INT             shift and go to state 54
    STRING          shift and go to state 18

    tipo_palabra                   shift and go to state 55

state 42

    (44) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> IF LPAREN . condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) condicion -> . ID EQUALS NUMBER
    (24) condicion -> . ID GT NUMBER
    (25) condicion -> . ID GE NUMBER
    (26) condicion -> . ID LE NUMBER
    (27) condicion -> . ID LT NUMBER
    (28) condicion -> . ID AND NUMBER
    (29) condicion -> . ID OR NUMBER
    (30) condicion -> . NUMBER EQUALS NUMBER
    (31) condicion -> . NUMBER GT NUMBER
    (32) condicion -> . NUMBER GE NUMBER
    (33) condicion -> . NUMBER LE NUMBER
    (34) condicion -> . NUMBER LT NUMBER
    (35) condicion -> . ID AND ID
    (36) condicion -> . ID OR ID
    (37) condicion -> . ID EQ ID
    (38) condicion -> . ID EQ STRING_LITERAL

    ID              shift and go to state 57
    NUMBER          shift and go to state 58

    condicion                      shift and go to state 56

state 43

    (15) expression -> ID .
    (17) expression -> ID . EQUALS propiedades
    (18) expression -> ID . GT propiedades
    (19) expression -> ID . GE propiedades
    (20) expression -> ID . LE propiedades
    (21) expression -> ID . LT propiedades

    SEMI            reduce using rule 15 (expression -> ID .)
    EQUALS          shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LE              shift and go to state 62
    LT              shift and go to state 63


state 44

    (59) assignment -> ID EQUALS expression . SEMI

    SEMI            shift and go to state 64


state 45

    (16) expression -> NUMBER .

    SEMI            reduce using rule 16 (expression -> NUMBER .)


state 46

    (22) expression -> NOT . expression
    (15) expression -> . ID
    (16) expression -> . NUMBER
    (17) expression -> . ID EQUALS propiedades
    (18) expression -> . ID GT propiedades
    (19) expression -> . ID GE propiedades
    (20) expression -> . ID LE propiedades
    (21) expression -> . ID LT propiedades
    (22) expression -> . NOT expression

    ID              shift and go to state 43
    NUMBER          shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 65

state 47

    (8) main -> PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 66


state 48

    (69) array_usage -> tipo_number LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI

    ID              shift and go to state 67


state 49

    (60) dcl_variable -> tipo_number ID EQUALS . NUMBER

    NUMBER          shift and go to state 68


state 50

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET . ID EQUALS LBRACE args RBRACE SEMI

    ID              shift and go to state 69


state 51

    (61) dcl_variable -> tipo_palabra ID EQUALS . STRING_LITERAL

    STRING_LITERAL  shift and go to state 70


state 52

    (71) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO OUT . PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PUNTO           shift and go to state 71


state 53

    (62) dcl_variable -> tipo_booleano ID EQUALS . valor_boolean
    (67) valor_boolean -> . TRUE
    (68) valor_boolean -> . FALSE

    TRUE            shift and go to state 73
    FALSE           shift and go to state 74

    valor_boolean                  shift and go to state 72

state 54

    (41) for_statement -> FOR LPAREN INT . ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN INT . ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    ID              shift and go to state 75


state 55

    (43) for_statement -> FOR LPAREN tipo_palabra . ID COLON ID RPAREN LBRACE statements RBRACE

    ID              shift and go to state 76


state 56

    (44) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE
    (45) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> IF LPAREN condicion . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 77


state 57

    (23) condicion -> ID . EQUALS NUMBER
    (24) condicion -> ID . GT NUMBER
    (25) condicion -> ID . GE NUMBER
    (26) condicion -> ID . LE NUMBER
    (27) condicion -> ID . LT NUMBER
    (28) condicion -> ID . AND NUMBER
    (29) condicion -> ID . OR NUMBER
    (35) condicion -> ID . AND ID
    (36) condicion -> ID . OR ID
    (37) condicion -> ID . EQ ID
    (38) condicion -> ID . EQ STRING_LITERAL

    EQUALS          shift and go to state 78
    GT              shift and go to state 79
    GE              shift and go to state 80
    LE              shift and go to state 81
    LT              shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84
    EQ              shift and go to state 85


state 58

    (30) condicion -> NUMBER . EQUALS NUMBER
    (31) condicion -> NUMBER . GT NUMBER
    (32) condicion -> NUMBER . GE NUMBER
    (33) condicion -> NUMBER . LE NUMBER
    (34) condicion -> NUMBER . LT NUMBER

    EQUALS          shift and go to state 86
    GT              shift and go to state 87
    GE              shift and go to state 88
    LE              shift and go to state 89
    LT              shift and go to state 90


state 59

    (17) expression -> ID EQUALS . propiedades
    (56) propiedades -> . ID PUNTO ID

    ID              shift and go to state 91

    propiedades                    shift and go to state 92

state 60

    (18) expression -> ID GT . propiedades
    (56) propiedades -> . ID PUNTO ID

    ID              shift and go to state 91

    propiedades                    shift and go to state 93

state 61

    (19) expression -> ID GE . propiedades
    (56) propiedades -> . ID PUNTO ID

    ID              shift and go to state 91

    propiedades                    shift and go to state 94

state 62

    (20) expression -> ID LE . propiedades
    (56) propiedades -> . ID PUNTO ID

    ID              shift and go to state 91

    propiedades                    shift and go to state 95

state 63

    (21) expression -> ID LT . propiedades
    (56) propiedades -> . ID PUNTO ID

    ID              shift and go to state 91

    propiedades                    shift and go to state 96

state 64

    (59) assignment -> ID EQUALS expression SEMI .

    PUBLIC          reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    ID              reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    SYSTEM          reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    FOR             reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    IF              reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    INT             reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    DOUBLE          reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    STRING          reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    BOOLEAN         reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)
    RBRACE          reduce using rule 59 (assignment -> ID EQUALS expression SEMI .)


state 65

    (22) expression -> NOT expression .

    SEMI            reduce using rule 22 (expression -> NOT expression .)


state 66

    (8) main -> PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 97


state 67

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI

    EQUALS          shift and go to state 98


state 68

    (60) dcl_variable -> tipo_number ID EQUALS NUMBER .

    SEMI            reduce using rule 60 (dcl_variable -> tipo_number ID EQUALS NUMBER .)


state 69

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID . EQUALS LBRACE args RBRACE SEMI

    EQUALS          shift and go to state 99


state 70

    (61) dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL .

    SEMI            reduce using rule 61 (dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL .)


state 71

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO OUT PUNTO . PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    PRINTLN         shift and go to state 100


state 72

    (62) dcl_variable -> tipo_booleano ID EQUALS valor_boolean .

    SEMI            reduce using rule 62 (dcl_variable -> tipo_booleano ID EQUALS valor_boolean .)


state 73

    (67) valor_boolean -> TRUE .

    SEMI            reduce using rule 67 (valor_boolean -> TRUE .)


state 74

    (68) valor_boolean -> FALSE .

    SEMI            reduce using rule 68 (valor_boolean -> FALSE .)


state 75

    (41) for_statement -> FOR LPAREN INT ID . EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN INT ID . EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    EQUALS          shift and go to state 101


state 76

    (43) for_statement -> FOR LPAREN tipo_palabra ID . COLON ID RPAREN LBRACE statements RBRACE

    COLON           shift and go to state 102


state 77

    (44) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE
    (45) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE statements
    (46) if_statement -> IF LPAREN condicion RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 103


state 78

    (23) condicion -> ID EQUALS . NUMBER

    NUMBER          shift and go to state 104


state 79

    (24) condicion -> ID GT . NUMBER

    NUMBER          shift and go to state 105


state 80

    (25) condicion -> ID GE . NUMBER

    NUMBER          shift and go to state 106


state 81

    (26) condicion -> ID LE . NUMBER

    NUMBER          shift and go to state 107


state 82

    (27) condicion -> ID LT . NUMBER

    NUMBER          shift and go to state 108


state 83

    (28) condicion -> ID AND . NUMBER
    (35) condicion -> ID AND . ID

    NUMBER          shift and go to state 110
    ID              shift and go to state 109


state 84

    (29) condicion -> ID OR . NUMBER
    (36) condicion -> ID OR . ID

    NUMBER          shift and go to state 112
    ID              shift and go to state 111


state 85

    (37) condicion -> ID EQ . ID
    (38) condicion -> ID EQ . STRING_LITERAL

    ID              shift and go to state 113
    STRING_LITERAL  shift and go to state 114


state 86

    (30) condicion -> NUMBER EQUALS . NUMBER

    NUMBER          shift and go to state 115


state 87

    (31) condicion -> NUMBER GT . NUMBER

    NUMBER          shift and go to state 116


state 88

    (32) condicion -> NUMBER GE . NUMBER

    NUMBER          shift and go to state 117


state 89

    (33) condicion -> NUMBER LE . NUMBER

    NUMBER          shift and go to state 118


state 90

    (34) condicion -> NUMBER LT . NUMBER

    NUMBER          shift and go to state 119


state 91

    (56) propiedades -> ID . PUNTO ID

    PUNTO           shift and go to state 120


state 92

    (17) expression -> ID EQUALS propiedades .

    SEMI            reduce using rule 17 (expression -> ID EQUALS propiedades .)


state 93

    (18) expression -> ID GT propiedades .

    SEMI            reduce using rule 18 (expression -> ID GT propiedades .)


state 94

    (19) expression -> ID GE propiedades .

    SEMI            reduce using rule 19 (expression -> ID GE propiedades .)


state 95

    (20) expression -> ID LE propiedades .

    SEMI            reduce using rule 20 (expression -> ID LE propiedades .)


state 96

    (21) expression -> ID LT propiedades .

    SEMI            reduce using rule 21 (expression -> ID LT propiedades .)


state 97

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    STRING          shift and go to state 121


state 98

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 122


state 99

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS . LBRACE args RBRACE SEMI

    LBRACE          shift and go to state 123


state 100

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN . LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI

    LPAREN          shift and go to state 124


state 101

    (41) for_statement -> FOR LPAREN INT ID EQUALS . NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN INT ID EQUALS . NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    NUMBER          shift and go to state 125


state 102

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON . ID RPAREN LBRACE statements RBRACE

    ID              shift and go to state 126


state 103

    (44) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE
    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE statements
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 127
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 104

    (23) condicion -> ID EQUALS NUMBER .

    RPAREN          reduce using rule 23 (condicion -> ID EQUALS NUMBER .)
    SEMI            reduce using rule 23 (condicion -> ID EQUALS NUMBER .)


state 105

    (24) condicion -> ID GT NUMBER .

    RPAREN          reduce using rule 24 (condicion -> ID GT NUMBER .)
    SEMI            reduce using rule 24 (condicion -> ID GT NUMBER .)


state 106

    (25) condicion -> ID GE NUMBER .

    RPAREN          reduce using rule 25 (condicion -> ID GE NUMBER .)
    SEMI            reduce using rule 25 (condicion -> ID GE NUMBER .)


state 107

    (26) condicion -> ID LE NUMBER .

    RPAREN          reduce using rule 26 (condicion -> ID LE NUMBER .)
    SEMI            reduce using rule 26 (condicion -> ID LE NUMBER .)


state 108

    (27) condicion -> ID LT NUMBER .

    RPAREN          reduce using rule 27 (condicion -> ID LT NUMBER .)
    SEMI            reduce using rule 27 (condicion -> ID LT NUMBER .)


state 109

    (35) condicion -> ID AND ID .

    RPAREN          reduce using rule 35 (condicion -> ID AND ID .)
    SEMI            reduce using rule 35 (condicion -> ID AND ID .)


state 110

    (28) condicion -> ID AND NUMBER .

    RPAREN          reduce using rule 28 (condicion -> ID AND NUMBER .)
    SEMI            reduce using rule 28 (condicion -> ID AND NUMBER .)


state 111

    (36) condicion -> ID OR ID .

    RPAREN          reduce using rule 36 (condicion -> ID OR ID .)
    SEMI            reduce using rule 36 (condicion -> ID OR ID .)


state 112

    (29) condicion -> ID OR NUMBER .

    RPAREN          reduce using rule 29 (condicion -> ID OR NUMBER .)
    SEMI            reduce using rule 29 (condicion -> ID OR NUMBER .)


state 113

    (37) condicion -> ID EQ ID .

    RPAREN          reduce using rule 37 (condicion -> ID EQ ID .)
    SEMI            reduce using rule 37 (condicion -> ID EQ ID .)


state 114

    (38) condicion -> ID EQ STRING_LITERAL .

    RPAREN          reduce using rule 38 (condicion -> ID EQ STRING_LITERAL .)
    SEMI            reduce using rule 38 (condicion -> ID EQ STRING_LITERAL .)


state 115

    (30) condicion -> NUMBER EQUALS NUMBER .

    RPAREN          reduce using rule 30 (condicion -> NUMBER EQUALS NUMBER .)
    SEMI            reduce using rule 30 (condicion -> NUMBER EQUALS NUMBER .)


state 116

    (31) condicion -> NUMBER GT NUMBER .

    RPAREN          reduce using rule 31 (condicion -> NUMBER GT NUMBER .)
    SEMI            reduce using rule 31 (condicion -> NUMBER GT NUMBER .)


state 117

    (32) condicion -> NUMBER GE NUMBER .

    RPAREN          reduce using rule 32 (condicion -> NUMBER GE NUMBER .)
    SEMI            reduce using rule 32 (condicion -> NUMBER GE NUMBER .)


state 118

    (33) condicion -> NUMBER LE NUMBER .

    RPAREN          reduce using rule 33 (condicion -> NUMBER LE NUMBER .)
    SEMI            reduce using rule 33 (condicion -> NUMBER LE NUMBER .)


state 119

    (34) condicion -> NUMBER LT NUMBER .

    RPAREN          reduce using rule 34 (condicion -> NUMBER LT NUMBER .)
    SEMI            reduce using rule 34 (condicion -> NUMBER LT NUMBER .)


state 120

    (56) propiedades -> ID PUNTO . ID

    ID              shift and go to state 129


state 121

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE

    LBRACKET        shift and go to state 130


state 122

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (47) args -> . arg
    (48) args -> . args arg
    (49) arg -> . ID
    (50) arg -> . STRING_LITERAL
    (51) arg -> . NUMBER
    (52) arg -> . NOT arg
    (53) arg -> . ID COMMA
    (54) arg -> . STRING_LITERAL COMMA
    (55) arg -> . NUMBER COMMA

    ID              shift and go to state 131
    STRING_LITERAL  shift and go to state 134
    NUMBER          shift and go to state 135
    NOT             shift and go to state 136

    args                           shift and go to state 132
    arg                            shift and go to state 133

state 123

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE . args RBRACE SEMI
    (47) args -> . arg
    (48) args -> . args arg
    (49) arg -> . ID
    (50) arg -> . STRING_LITERAL
    (51) arg -> . NUMBER
    (52) arg -> . NOT arg
    (53) arg -> . ID COMMA
    (54) arg -> . STRING_LITERAL COMMA
    (55) arg -> . NUMBER COMMA

    ID              shift and go to state 131
    STRING_LITERAL  shift and go to state 134
    NUMBER          shift and go to state 135
    NOT             shift and go to state 136

    args                           shift and go to state 137
    arg                            shift and go to state 133

state 124

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . STRING_LITERAL RPAREN SEMI
    (72) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN . ID LBRACKET ID RBRACKET RPAREN SEMI

    STRING_LITERAL  shift and go to state 138
    ID              shift and go to state 139


state 125

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER . SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER . SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 140


state 126

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 141


state 127

    (44) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE
    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE statements
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 142
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 128

    (57) statements -> statement .

    RBRACE          reduce using rule 57 (statements -> statement .)
    ID              reduce using rule 57 (statements -> statement .)
    SYSTEM          reduce using rule 57 (statements -> statement .)
    FOR             reduce using rule 57 (statements -> statement .)
    IF              reduce using rule 57 (statements -> statement .)
    INT             reduce using rule 57 (statements -> statement .)
    DOUBLE          reduce using rule 57 (statements -> statement .)
    STRING          reduce using rule 57 (statements -> statement .)
    BOOLEAN         reduce using rule 57 (statements -> statement .)
    PUBLIC          reduce using rule 57 (statements -> statement .)


state 129

    (56) propiedades -> ID PUNTO ID .

    SEMI            reduce using rule 56 (propiedades -> ID PUNTO ID .)


state 130

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ARGS RPAREN LBRACE statements RBRACE

    RBRACKET        shift and go to state 144


state 131

    (49) arg -> ID .
    (53) arg -> ID . COMMA

    RBRACE          reduce using rule 49 (arg -> ID .)
    ID              reduce using rule 49 (arg -> ID .)
    STRING_LITERAL  reduce using rule 49 (arg -> ID .)
    NUMBER          reduce using rule 49 (arg -> ID .)
    NOT             reduce using rule 49 (arg -> ID .)
    COMMA           shift and go to state 145


state 132

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (48) args -> args . arg
    (49) arg -> . ID
    (50) arg -> . STRING_LITERAL
    (51) arg -> . NUMBER
    (52) arg -> . NOT arg
    (53) arg -> . ID COMMA
    (54) arg -> . STRING_LITERAL COMMA
    (55) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 146
    ID              shift and go to state 131
    STRING_LITERAL  shift and go to state 134
    NUMBER          shift and go to state 135
    NOT             shift and go to state 136

    arg                            shift and go to state 147

state 133

    (47) args -> arg .

    RBRACE          reduce using rule 47 (args -> arg .)
    ID              reduce using rule 47 (args -> arg .)
    STRING_LITERAL  reduce using rule 47 (args -> arg .)
    NUMBER          reduce using rule 47 (args -> arg .)
    NOT             reduce using rule 47 (args -> arg .)


state 134

    (50) arg -> STRING_LITERAL .
    (54) arg -> STRING_LITERAL . COMMA

    RBRACE          reduce using rule 50 (arg -> STRING_LITERAL .)
    ID              reduce using rule 50 (arg -> STRING_LITERAL .)
    STRING_LITERAL  reduce using rule 50 (arg -> STRING_LITERAL .)
    NUMBER          reduce using rule 50 (arg -> STRING_LITERAL .)
    NOT             reduce using rule 50 (arg -> STRING_LITERAL .)
    COMMA           shift and go to state 148


state 135

    (51) arg -> NUMBER .
    (55) arg -> NUMBER . COMMA

    RBRACE          reduce using rule 51 (arg -> NUMBER .)
    ID              reduce using rule 51 (arg -> NUMBER .)
    STRING_LITERAL  reduce using rule 51 (arg -> NUMBER .)
    NUMBER          reduce using rule 51 (arg -> NUMBER .)
    NOT             reduce using rule 51 (arg -> NUMBER .)
    COMMA           shift and go to state 149


state 136

    (52) arg -> NOT . arg
    (49) arg -> . ID
    (50) arg -> . STRING_LITERAL
    (51) arg -> . NUMBER
    (52) arg -> . NOT arg
    (53) arg -> . ID COMMA
    (54) arg -> . STRING_LITERAL COMMA
    (55) arg -> . NUMBER COMMA

    ID              shift and go to state 131
    STRING_LITERAL  shift and go to state 134
    NUMBER          shift and go to state 135
    NOT             shift and go to state 136

    arg                            shift and go to state 150

state 137

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args . RBRACE SEMI
    (48) args -> args . arg
    (49) arg -> . ID
    (50) arg -> . STRING_LITERAL
    (51) arg -> . NUMBER
    (52) arg -> . NOT arg
    (53) arg -> . ID COMMA
    (54) arg -> . STRING_LITERAL COMMA
    (55) arg -> . NUMBER COMMA

    RBRACE          shift and go to state 151
    ID              shift and go to state 131
    STRING_LITERAL  shift and go to state 134
    NUMBER          shift and go to state 135
    NOT             shift and go to state 136

    arg                            shift and go to state 147

state 138

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL . RPAREN SEMI

    RPAREN          shift and go to state 152


state 139

    (72) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . RPAREN SEMI
    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID . LBRACKET ID RBRACKET RPAREN SEMI

    RPAREN          shift and go to state 153
    LBRACKET        shift and go to state 154


state 140

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI . condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI . expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (23) condicion -> . ID EQUALS NUMBER
    (24) condicion -> . ID GT NUMBER
    (25) condicion -> . ID GE NUMBER
    (26) condicion -> . ID LE NUMBER
    (27) condicion -> . ID LT NUMBER
    (28) condicion -> . ID AND NUMBER
    (29) condicion -> . ID OR NUMBER
    (30) condicion -> . NUMBER EQUALS NUMBER
    (31) condicion -> . NUMBER GT NUMBER
    (32) condicion -> . NUMBER GE NUMBER
    (33) condicion -> . NUMBER LE NUMBER
    (34) condicion -> . NUMBER LT NUMBER
    (35) condicion -> . ID AND ID
    (36) condicion -> . ID OR ID
    (37) condicion -> . ID EQ ID
    (38) condicion -> . ID EQ STRING_LITERAL
    (15) expression -> . ID
    (16) expression -> . NUMBER
    (17) expression -> . ID EQUALS propiedades
    (18) expression -> . ID GT propiedades
    (19) expression -> . ID GE propiedades
    (20) expression -> . ID LE propiedades
    (21) expression -> . ID LT propiedades
    (22) expression -> . NOT expression

    ID              shift and go to state 155
    NUMBER          shift and go to state 156
    NOT             shift and go to state 46

    condicion                      shift and go to state 157
    expression                     shift and go to state 158

state 141

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 159


state 142

    (44) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .
    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE statements
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    PUBLIC          reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 44 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 160


state 143

    (58) statements -> statements statement .

    RBRACE          reduce using rule 58 (statements -> statements statement .)
    ID              reduce using rule 58 (statements -> statements statement .)
    SYSTEM          reduce using rule 58 (statements -> statements statement .)
    FOR             reduce using rule 58 (statements -> statements statement .)
    IF              reduce using rule 58 (statements -> statements statement .)
    INT             reduce using rule 58 (statements -> statements statement .)
    DOUBLE          reduce using rule 58 (statements -> statements statement .)
    STRING          reduce using rule 58 (statements -> statements statement .)
    BOOLEAN         reduce using rule 58 (statements -> statements statement .)
    PUBLIC          reduce using rule 58 (statements -> statements statement .)


state 144

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ARGS RPAREN LBRACE statements RBRACE

    ARGS            shift and go to state 161


state 145

    (53) arg -> ID COMMA .

    RBRACE          reduce using rule 53 (arg -> ID COMMA .)
    ID              reduce using rule 53 (arg -> ID COMMA .)
    STRING_LITERAL  reduce using rule 53 (arg -> ID COMMA .)
    NUMBER          reduce using rule 53 (arg -> ID COMMA .)
    NOT             reduce using rule 53 (arg -> ID COMMA .)


state 146

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 162


state 147

    (48) args -> args arg .

    RBRACE          reduce using rule 48 (args -> args arg .)
    ID              reduce using rule 48 (args -> args arg .)
    STRING_LITERAL  reduce using rule 48 (args -> args arg .)
    NUMBER          reduce using rule 48 (args -> args arg .)
    NOT             reduce using rule 48 (args -> args arg .)


state 148

    (54) arg -> STRING_LITERAL COMMA .

    RBRACE          reduce using rule 54 (arg -> STRING_LITERAL COMMA .)
    ID              reduce using rule 54 (arg -> STRING_LITERAL COMMA .)
    STRING_LITERAL  reduce using rule 54 (arg -> STRING_LITERAL COMMA .)
    NUMBER          reduce using rule 54 (arg -> STRING_LITERAL COMMA .)
    NOT             reduce using rule 54 (arg -> STRING_LITERAL COMMA .)


state 149

    (55) arg -> NUMBER COMMA .

    RBRACE          reduce using rule 55 (arg -> NUMBER COMMA .)
    ID              reduce using rule 55 (arg -> NUMBER COMMA .)
    STRING_LITERAL  reduce using rule 55 (arg -> NUMBER COMMA .)
    NUMBER          reduce using rule 55 (arg -> NUMBER COMMA .)
    NOT             reduce using rule 55 (arg -> NUMBER COMMA .)


state 150

    (52) arg -> NOT arg .

    RBRACE          reduce using rule 52 (arg -> NOT arg .)
    ID              reduce using rule 52 (arg -> NOT arg .)
    STRING_LITERAL  reduce using rule 52 (arg -> NOT arg .)
    NUMBER          reduce using rule 52 (arg -> NOT arg .)
    NOT             reduce using rule 52 (arg -> NOT arg .)


state 151

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE . SEMI

    SEMI            shift and go to state 163


state 152

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN . SEMI

    SEMI            shift and go to state 164


state 153

    (72) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN . SEMI

    SEMI            shift and go to state 165


state 154

    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET . ID RBRACKET RPAREN SEMI

    ID              shift and go to state 166


state 155

    (23) condicion -> ID . EQUALS NUMBER
    (24) condicion -> ID . GT NUMBER
    (25) condicion -> ID . GE NUMBER
    (26) condicion -> ID . LE NUMBER
    (27) condicion -> ID . LT NUMBER
    (28) condicion -> ID . AND NUMBER
    (29) condicion -> ID . OR NUMBER
    (35) condicion -> ID . AND ID
    (36) condicion -> ID . OR ID
    (37) condicion -> ID . EQ ID
    (38) condicion -> ID . EQ STRING_LITERAL
    (15) expression -> ID .
    (17) expression -> ID . EQUALS propiedades
    (18) expression -> ID . GT propiedades
    (19) expression -> ID . GE propiedades
    (20) expression -> ID . LE propiedades
    (21) expression -> ID . LT propiedades

    EQUALS          shift and go to state 167
    GT              shift and go to state 168
    GE              shift and go to state 169
    LE              shift and go to state 170
    LT              shift and go to state 171
    AND             shift and go to state 83
    OR              shift and go to state 84
    EQ              shift and go to state 85
    SEMI            reduce using rule 15 (expression -> ID .)


state 156

    (30) condicion -> NUMBER . EQUALS NUMBER
    (31) condicion -> NUMBER . GT NUMBER
    (32) condicion -> NUMBER . GE NUMBER
    (33) condicion -> NUMBER . LE NUMBER
    (34) condicion -> NUMBER . LT NUMBER
    (16) expression -> NUMBER .

    EQUALS          shift and go to state 86
    GT              shift and go to state 87
    GE              shift and go to state 88
    LE              shift and go to state 89
    LT              shift and go to state 90
    SEMI            reduce using rule 16 (expression -> NUMBER .)


state 157

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion . SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 172


state 158

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression . SEMI increment_or_decrement RPAREN LBRACE statements RBRACE

    SEMI            shift and go to state 173


state 159

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE . statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    tipo_palabra                   shift and go to state 20
    statements                     shift and go to state 174
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_booleano                  shift and go to state 22

state 160

    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . statements
    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    LBRACE          shift and go to state 175
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 176
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 161

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 177


state 162

    (69) array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 69 (array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 163

    (70) array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .

    PUBLIC          reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    ID              reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    SYSTEM          reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    FOR             reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    IF              reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    INT             reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    DOUBLE          reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    STRING          reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    BOOLEAN         reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)
    RBRACE          reduce using rule 70 (array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI .)


state 164

    (71) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .

    PUBLIC          reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    ID              reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    SYSTEM          reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    FOR             reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    IF              reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    INT             reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    DOUBLE          reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    STRING          reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    BOOLEAN         reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    RBRACE          reduce using rule 71 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)


state 165

    (72) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .

    PUBLIC          reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    ID              reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    SYSTEM          reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    FOR             reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    IF              reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    INT             reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    DOUBLE          reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    STRING          reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)
    RBRACE          reduce using rule 72 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI .)


state 166

    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID . RBRACKET RPAREN SEMI

    RBRACKET        shift and go to state 178


state 167

    (23) condicion -> ID EQUALS . NUMBER
    (17) expression -> ID EQUALS . propiedades
    (56) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 104
    ID              shift and go to state 91

    propiedades                    shift and go to state 92

state 168

    (24) condicion -> ID GT . NUMBER
    (18) expression -> ID GT . propiedades
    (56) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 105
    ID              shift and go to state 91

    propiedades                    shift and go to state 93

state 169

    (25) condicion -> ID GE . NUMBER
    (19) expression -> ID GE . propiedades
    (56) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 106
    ID              shift and go to state 91

    propiedades                    shift and go to state 94

state 170

    (26) condicion -> ID LE . NUMBER
    (20) expression -> ID LE . propiedades
    (56) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 107
    ID              shift and go to state 91

    propiedades                    shift and go to state 95

state 171

    (27) condicion -> ID LT . NUMBER
    (21) expression -> ID LT . propiedades
    (56) propiedades -> . ID PUNTO ID

    NUMBER          shift and go to state 108
    ID              shift and go to state 91

    propiedades                    shift and go to state 96

state 172

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI . increment_or_decrement RPAREN LBRACE statements RBRACE
    (39) increment_or_decrement -> . ID INCREMENT
    (40) increment_or_decrement -> . ID DECREMENT

    ID              shift and go to state 179

    increment_or_decrement         shift and go to state 180

state 173

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI . increment_or_decrement RPAREN LBRACE statements RBRACE
    (39) increment_or_decrement -> . ID INCREMENT
    (40) increment_or_decrement -> . ID DECREMENT

    ID              shift and go to state 179

    increment_or_decrement         shift and go to state 181

state 174

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements . RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 182
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    tipo_palabra                   shift and go to state 20
    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_booleano                  shift and go to state 22

state 175

    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 183
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 176

    (45) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for SYSTEM resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    PUBLIC          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    RBRACE          reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .)
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

  ! ID              [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! SYSTEM          [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! FOR             [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! IF              [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! INT             [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! DOUBLE          [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! STRING          [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]
  ! BOOLEAN         [ reduce using rule 45 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements .) ]

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 177

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 184


state 178

    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET . RPAREN SEMI

    RPAREN          shift and go to state 185


state 179

    (39) increment_or_decrement -> ID . INCREMENT
    (40) increment_or_decrement -> ID . DECREMENT

    INCREMENT       shift and go to state 186
    DECREMENT       shift and go to state 187


state 180

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 188


state 181

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 189


state 182

    (43) for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 43 (for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE .)


state 183

    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 190
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 184

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE . statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 191
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 185

    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN . SEMI

    SEMI            shift and go to state 192


state 186

    (39) increment_or_decrement -> ID INCREMENT .

    RPAREN          reduce using rule 39 (increment_or_decrement -> ID INCREMENT .)


state 187

    (40) increment_or_decrement -> ID DECREMENT .

    RPAREN          reduce using rule 40 (increment_or_decrement -> ID DECREMENT .)


state 188

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 193


state 189

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 194


state 190

    (46) if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    PUBLIC          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    ID              reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    STRING          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 46 (if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 191

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements . RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 195
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 192

    (73) print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .

    PUBLIC          reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    ID              reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    SYSTEM          reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    FOR             reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    IF              reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    INT             reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    DOUBLE          reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    STRING          reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    BOOLEAN         reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)
    RBRACE          reduce using rule 73 (print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI .)


state 193

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE . statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 196
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 194

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE . statements RBRACE
    (57) statements -> . statement
    (58) statements -> . statements statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statements                     shift and go to state 197
    statement                      shift and go to state 128
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 195

    (8) main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 8 (main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE .)


state 196

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements . RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 198
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 197

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements . RBRACE
    (58) statements -> statements . statement
    (9) statement -> . assignment
    (10) statement -> . array_usage
    (11) statement -> . print_statement
    (12) statement -> . dcl_variable SEMI
    (13) statement -> . for_statement
    (14) statement -> . if_statement
    (59) assignment -> . ID EQUALS expression SEMI
    (69) array_usage -> . tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (70) array_usage -> . tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI
    (71) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI
    (72) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI
    (73) print_statement -> . SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI
    (60) dcl_variable -> . tipo_number ID EQUALS NUMBER
    (61) dcl_variable -> . tipo_palabra ID EQUALS STRING_LITERAL
    (62) dcl_variable -> . tipo_booleano ID EQUALS valor_boolean
    (41) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (42) for_statement -> . FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE
    (43) for_statement -> . FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE
    (44) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE
    (45) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements
    (46) if_statement -> . IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (64) tipo_number -> . INT
    (65) tipo_number -> . DOUBLE
    (66) tipo_palabra -> . STRING
    (63) tipo_booleano -> . BOOLEAN

    RBRACE          shift and go to state 199
    ID              shift and go to state 7
    SYSTEM          shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 25
    INT             shift and go to state 24
    DOUBLE          shift and go to state 26
    STRING          shift and go to state 18
    BOOLEAN         shift and go to state 27

    statement                      shift and go to state 143
    assignment                     shift and go to state 11
    array_usage                    shift and go to state 12
    print_statement                shift and go to state 13
    dcl_variable                   shift and go to state 14
    for_statement                  shift and go to state 15
    if_statement                   shift and go to state 16
    tipo_number                    shift and go to state 19
    tipo_palabra                   shift and go to state 20
    tipo_booleano                  shift and go to state 22

state 198

    (41) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 41 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)


state 199

    (42) for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .

    PUBLIC          reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    SYSTEM          reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    STRING          reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    BOOLEAN         reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 42 (for_statement -> FOR LPAREN INT ID EQUALS NUMBER SEMI expression SEMI increment_or_decrement RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 32 resolved as shift
WARNING: shift/reduce conflict for FOR in state 32 resolved as shift
WARNING: shift/reduce conflict for IF in state 32 resolved as shift
WARNING: shift/reduce conflict for INT in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 32 resolved as shift
WARNING: shift/reduce conflict for STRING in state 32 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for SYSTEM in state 176 resolved as shift
WARNING: shift/reduce conflict for FOR in state 176 resolved as shift
WARNING: shift/reduce conflict for IF in state 176 resolved as shift
WARNING: shift/reduce conflict for INT in state 176 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 176 resolved as shift
WARNING: shift/reduce conflict for STRING in state 176 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 176 resolved as shift
WARNING: reduce/reduce conflict in state 31 resolved using rule (class_body -> statement main)
WARNING: rejected rule (class_body -> main) in state 31
