
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL ARGS BOOLEAN CHAR CHARACTER CLASS COLON COMMA DECREMENT DIVEQUAL DIVIDE DO DOUBLE ELSE EQ EQUALS FALSE FLOAT FOR GE GT ID IF INCLUDE INCREMENT INT INTEGER LAND LBRACE LBRACKET LE LNOT LOR LPAREN LSHIFT LSHIFTEQUAL LT MAIN MINUS MINUSEQUAL MODEQUAL MODULO NE NOT NUMBER OR OREQUAL OUT PACKAGE PLUS PLUSEQUAL PRINTLN PUBLIC PUNTO RBRACE RBRACKET RETURN RPAREN RSHIFT RSHIFTEQUAL SEMI STATIC STRING STRING_LITERAL SYSTEM TERNARY TIMES TIMESEQUAL TRUE TYPEID VOID WHILE XOR XOREQUAL\n    program : class_declaration\n           | program class_declaration\n    \n    class_declaration : CLASS ID LBRACE class_body RBRACE\n    \n    class_body : statements main \n               | class_declaration \n               | main\n               | statements\n               | statements main statements\n     main : PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE  statement : assignment\n                | array_usage\n                | print_statement\n                | dcl_variable SEMI\n                | for_statement\n                | if_statement\n    expression : ID\n               | NUMBER\n               | NOT expression\n     condicion : ID EQ NUMBER\n               | ID GT NUMBER\n               | ID GE NUMBER\n               | ID LE NUMBER\n               | ID LT NUMBER\n               | ID AND NUMBER\n               | ID OR NUMBER\n               | NUMBER EQ NUMBER\n               | NUMBER GT NUMBER\n               | NUMBER GE NUMBER\n               | NUMBER LE NUMBER\n               | NUMBER LT NUMBER\n               | ID AND ID\n               | ID OR ID\n               | ID EQ ID \n               | ID EQ STRING_LITERAL\n               | ID EQUALS propiedades\n               | ID GT propiedades\n               | ID GE propiedades\n               | ID LE propiedades\n               | ID LT propiedades  increment_or_decrement : ID INCREMENT\n                               | ID DECREMENT  for_statement : FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE\n                      | FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE inicializacion : INT ID EQUALS NUMBER \n    if_statement : IF LPAREN condicion RPAREN LBRACE statements RBRACE\n                | IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements \n                | IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n    args : arg\n         | args arg\n    \n    arg : ID\n         | STRING_LITERAL\n         | NUMBER\n         | NOT arg\n         | ID COMMA\n         | STRING_LITERAL COMMA\n         | NUMBER COMMA\n     propiedades : ID PUNTO IDstatements : statement\n                  | statements statementassignment : ID EQUALS expression SEMIdcl_variable : tipo_number ID EQUALS NUMBER\n                    | tipo_palabra ID EQUALS STRING_LITERAL\n                    | tipo_booleano ID EQUALS valor_boolean\n                    | tipo_number ID\n                    | tipo_palabra ID\n                    | tipo_booleano ID tipo_booleano : BOOLEANtipo_number : INT\n                    | DOUBLEtipo_palabra : STRINGvalor_boolean : TRUE\n                    | FALSEarray_usage : tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI\n                    | tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMIprint_statement : SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI\n                       | SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI\n                       | SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMIempty :'
    
_lr_action_items = {'CLASS':([0,1,2,4,6,31,],[3,3,-1,-2,3,-3,]),'$end':([1,2,4,31,],[0,-1,-2,-3,]),'ID':([3,6,9,12,14,15,16,17,19,20,21,22,24,27,28,29,30,32,33,35,43,47,48,50,52,57,58,62,73,77,78,79,80,81,82,83,84,95,97,121,122,123,124,127,128,130,131,132,133,134,135,136,142,145,147,148,149,150,154,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[5,7,7,-58,-70,-10,-11,-12,-14,-15,37,39,41,-68,-69,-67,44,7,-59,-13,60,44,7,65,67,74,75,-60,60,98,101,101,101,101,110,112,101,125,7,130,130,138,140,7,143,-50,130,-48,-51,-52,130,130,-45,-54,-49,-55,-56,-53,165,7,7,-73,-74,-75,-76,7,7,7,7,7,-43,7,7,-42,-47,7,-77,-9,]),'LBRACE':([5,76,91,92,141,155,159,170,],[6,97,121,122,158,166,168,175,]),'PUBLIC':([6,9,12,15,16,17,19,20,33,35,62,142,161,162,163,164,169,173,177,178,180,],[13,13,-58,-10,-11,-12,-14,-15,-59,-13,-60,-45,-73,-74,-75,-76,-46,-43,-42,-47,-77,]),'SYSTEM':([6,9,12,15,16,17,19,20,32,33,35,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[23,23,-58,-10,-11,-12,-14,-15,23,-59,-13,23,-60,23,23,-45,23,23,-73,-74,-75,-76,23,23,23,23,23,-43,23,23,-42,-47,23,-77,-9,]),'FOR':([6,9,12,15,16,17,19,20,32,33,35,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[25,25,-58,-10,-11,-12,-14,-15,25,-59,-13,25,-60,25,25,-45,25,25,-73,-74,-75,-76,25,25,25,25,25,-43,25,25,-42,-47,25,-77,-9,]),'IF':([6,9,12,15,16,17,19,20,32,33,35,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[26,26,-58,-10,-11,-12,-14,-15,26,-59,-13,26,-60,26,26,-45,26,26,-73,-74,-75,-76,26,26,26,26,26,-43,26,26,-42,-47,26,-77,-9,]),'INT':([6,9,12,15,16,17,19,20,32,33,35,42,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[27,27,-58,-10,-11,-12,-14,-15,27,-59,-13,58,27,-60,27,27,-45,27,27,-73,-74,-75,-76,27,27,27,27,27,-43,27,27,-42,-47,27,-77,-9,]),'DOUBLE':([6,9,12,15,16,17,19,20,32,33,35,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[28,28,-58,-10,-11,-12,-14,-15,28,-59,-13,28,-60,28,28,-45,28,28,-73,-74,-75,-76,28,28,28,28,28,-43,28,28,-42,-47,28,-77,-9,]),'STRING':([6,9,12,15,16,17,19,20,32,33,35,42,48,62,90,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[14,14,-58,-10,-11,-12,-14,-15,14,-59,-13,14,14,-60,120,14,14,-45,14,14,-73,-74,-75,-76,14,14,14,14,14,-43,14,14,-42,-47,14,-77,-9,]),'BOOLEAN':([6,9,12,15,16,17,19,20,32,33,35,48,62,97,127,142,158,159,161,162,163,164,166,167,168,169,172,173,174,175,177,178,179,180,181,],[29,29,-58,-10,-11,-12,-14,-15,29,-59,-13,29,-60,29,29,-45,29,29,-73,-74,-75,-76,29,29,29,29,29,-43,29,29,-42,-47,29,-77,-9,]),'EQUALS':([7,37,39,41,60,65,67,75,],[30,51,53,55,84,91,92,96,]),'RBRACE':([8,9,10,11,12,15,16,17,19,20,31,32,33,35,48,62,127,130,131,132,133,134,136,142,145,147,148,149,150,161,162,163,164,167,169,172,173,174,177,178,179,180,181,],[31,-7,-6,-5,-58,-10,-11,-12,-14,-15,-3,-4,-59,-13,-8,-60,142,-50,146,-48,-51,-52,151,-45,-54,-49,-55,-56,-53,-73,-74,-75,-76,173,-46,177,-43,178,-42,-47,181,-77,-9,]),'STATIC':([13,],[34,]),'LBRACKET':([14,21,22,27,28,120,138,],[-70,36,38,-68,-69,129,154,]),'SEMI':([18,37,39,41,44,45,46,56,63,66,68,70,71,72,94,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,126,143,146,151,152,153,176,],[35,-64,-65,-66,-16,62,-17,73,-18,-61,-62,-63,-71,-72,124,-33,-19,-34,-20,-36,-21,-37,-22,-38,-23,-39,-31,-24,-32,-25,-35,-26,-27,-28,-29,-30,-44,-57,161,162,163,164,180,]),'PUNTO':([23,54,101,],[40,69,128,]),'LPAREN':([25,26,64,93,],[42,43,90,123,]),'NUMBER':([30,43,47,51,73,77,78,79,80,81,82,83,85,86,87,88,89,96,121,122,130,131,132,133,134,135,136,145,147,148,149,150,],[46,61,46,66,61,99,102,104,106,108,111,113,115,116,117,118,119,126,134,134,-50,134,-48,-51,-52,134,134,-54,-49,-55,-56,-53,]),'NOT':([30,47,121,122,130,131,132,133,134,135,136,145,147,148,149,150,],[47,47,135,135,-50,135,-48,-51,-52,135,135,-54,-49,-55,-56,-53,]),'VOID':([34,],[49,]),'RBRACKET':([36,38,129,165,],[50,52,144,171,]),'OUT':([40,],[54,]),'MAIN':([49,],[64,]),'STRING_LITERAL':([53,77,121,122,123,130,131,132,133,134,135,136,145,147,148,149,150,],[68,100,133,133,137,-50,133,-48,-51,-52,133,133,-54,-49,-55,-56,-53,]),'TRUE':([55,],[71,]),'FALSE':([55,],[72,]),'RPAREN':([59,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,137,138,139,143,156,157,160,171,],[76,-33,-19,-34,-20,-36,-21,-37,-22,-38,-23,-39,-31,-24,-32,-25,-35,-26,-27,-28,-29,-30,141,152,153,155,-57,-40,-41,170,176,]),'EQ':([60,61,],[77,85,]),'GT':([60,61,],[78,86,]),'GE':([60,61,],[79,87,]),'LE':([60,61,],[80,88,]),'LT':([60,61,],[81,89,]),'AND':([60,],[82,]),'OR':([60,],[83,]),'PRINTLN':([69,],[93,]),'COLON':([74,],[95,]),'COMMA':([130,133,134,],[145,148,149,]),'INCREMENT':([140,],[156,]),'DECREMENT':([140,],[157,]),'ELSE':([142,],[159,]),'ARGS':([144,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class_declaration':([0,1,6,],[2,4,11,]),'class_body':([6,],[8,]),'statements':([6,32,97,158,159,166,168,175,],[9,48,127,167,169,172,174,179,]),'main':([6,9,],[10,32,]),'statement':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[12,33,12,33,12,33,12,12,12,33,12,33,33,33,12,33,]),'assignment':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'array_usage':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print_statement':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'dcl_variable':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'for_statement':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'if_statement':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'tipo_number':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'tipo_palabra':([6,9,32,42,48,97,127,158,159,166,167,168,169,172,174,175,179,],[22,22,22,57,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'tipo_booleano':([6,9,32,48,97,127,158,159,166,167,168,169,172,174,175,179,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'expression':([30,47,],[45,63,]),'inicializacion':([42,],[56,]),'condicion':([43,73,],[59,94,]),'valor_boolean':([55,],[70,]),'propiedades':([78,79,80,81,84,],[103,105,107,109,114,]),'args':([121,122,],[131,136,]),'arg':([121,122,131,135,136,],[132,132,147,150,147,]),'increment_or_decrement':([124,],[139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_declaration','program',1,'p_program','analizadorSintactico.py',20),
  ('program -> program class_declaration','program',2,'p_program','analizadorSintactico.py',21),
  ('class_declaration -> CLASS ID LBRACE class_body RBRACE','class_declaration',5,'p_class_declaration','analizadorSintactico.py',31),
  ('class_body -> statements main','class_body',2,'p_class_body','analizadorSintactico.py',41),
  ('class_body -> class_declaration','class_body',1,'p_class_body','analizadorSintactico.py',42),
  ('class_body -> main','class_body',1,'p_class_body','analizadorSintactico.py',43),
  ('class_body -> statements','class_body',1,'p_class_body','analizadorSintactico.py',44),
  ('class_body -> statements main statements','class_body',3,'p_class_body','analizadorSintactico.py',45),
  ('main -> PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ARGS RPAREN LBRACE statements RBRACE','main',13,'p_main','analizadorSintactico.py',53),
  ('statement -> assignment','statement',1,'p_statement','analizadorSintactico.py',61),
  ('statement -> array_usage','statement',1,'p_statement','analizadorSintactico.py',62),
  ('statement -> print_statement','statement',1,'p_statement','analizadorSintactico.py',63),
  ('statement -> dcl_variable SEMI','statement',2,'p_statement','analizadorSintactico.py',64),
  ('statement -> for_statement','statement',1,'p_statement','analizadorSintactico.py',65),
  ('statement -> if_statement','statement',1,'p_statement','analizadorSintactico.py',66),
  ('expression -> ID','expression',1,'p_expression','analizadorSintactico.py',76),
  ('expression -> NUMBER','expression',1,'p_expression','analizadorSintactico.py',77),
  ('expression -> NOT expression','expression',2,'p_expression','analizadorSintactico.py',78),
  ('condicion -> ID EQ NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',91),
  ('condicion -> ID GT NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',92),
  ('condicion -> ID GE NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',93),
  ('condicion -> ID LE NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',94),
  ('condicion -> ID LT NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',95),
  ('condicion -> ID AND NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',96),
  ('condicion -> ID OR NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',97),
  ('condicion -> NUMBER EQ NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',98),
  ('condicion -> NUMBER GT NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',99),
  ('condicion -> NUMBER GE NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',100),
  ('condicion -> NUMBER LE NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',101),
  ('condicion -> NUMBER LT NUMBER','condicion',3,'p_condicion','analizadorSintactico.py',102),
  ('condicion -> ID AND ID','condicion',3,'p_condicion','analizadorSintactico.py',103),
  ('condicion -> ID OR ID','condicion',3,'p_condicion','analizadorSintactico.py',104),
  ('condicion -> ID EQ ID','condicion',3,'p_condicion','analizadorSintactico.py',105),
  ('condicion -> ID EQ STRING_LITERAL','condicion',3,'p_condicion','analizadorSintactico.py',106),
  ('condicion -> ID EQUALS propiedades','condicion',3,'p_condicion','analizadorSintactico.py',107),
  ('condicion -> ID GT propiedades','condicion',3,'p_condicion','analizadorSintactico.py',108),
  ('condicion -> ID GE propiedades','condicion',3,'p_condicion','analizadorSintactico.py',109),
  ('condicion -> ID LE propiedades','condicion',3,'p_condicion','analizadorSintactico.py',110),
  ('condicion -> ID LT propiedades','condicion',3,'p_condicion','analizadorSintactico.py',111),
  ('increment_or_decrement -> ID INCREMENT','increment_or_decrement',2,'p_increment_or_decrement','analizadorSintactico.py',119),
  ('increment_or_decrement -> ID DECREMENT','increment_or_decrement',2,'p_increment_or_decrement','analizadorSintactico.py',120),
  ('for_statement -> FOR LPAREN inicializacion SEMI condicion SEMI increment_or_decrement RPAREN LBRACE statements RBRACE','for_statement',11,'p_for_statement','analizadorSintactico.py',128),
  ('for_statement -> FOR LPAREN tipo_palabra ID COLON ID RPAREN LBRACE statements RBRACE','for_statement',10,'p_for_statement','analizadorSintactico.py',129),
  ('inicializacion -> INT ID EQUALS NUMBER','inicializacion',4,'p_inicializacion','analizadorSintactico.py',137),
  ('if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE','if_statement',7,'p_if_statement','analizadorSintactico.py',145),
  ('if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE statements','if_statement',9,'p_if_statement','analizadorSintactico.py',146),
  ('if_statement -> IF LPAREN condicion RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_if_statement','analizadorSintactico.py',147),
  ('args -> arg','args',1,'p_args','analizadorSintactico.py',158),
  ('args -> args arg','args',2,'p_args','analizadorSintactico.py',159),
  ('arg -> ID','arg',1,'p_arg','analizadorSintactico.py',172),
  ('arg -> STRING_LITERAL','arg',1,'p_arg','analizadorSintactico.py',173),
  ('arg -> NUMBER','arg',1,'p_arg','analizadorSintactico.py',174),
  ('arg -> NOT arg','arg',2,'p_arg','analizadorSintactico.py',175),
  ('arg -> ID COMMA','arg',2,'p_arg','analizadorSintactico.py',176),
  ('arg -> STRING_LITERAL COMMA','arg',2,'p_arg','analizadorSintactico.py',177),
  ('arg -> NUMBER COMMA','arg',2,'p_arg','analizadorSintactico.py',178),
  ('propiedades -> ID PUNTO ID','propiedades',3,'p_propiedades','analizadorSintactico.py',187),
  ('statements -> statement','statements',1,'p_statements','analizadorSintactico.py',197),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintactico.py',198),
  ('assignment -> ID EQUALS expression SEMI','assignment',4,'p_assignment','analizadorSintactico.py',210),
  ('dcl_variable -> tipo_number ID EQUALS NUMBER','dcl_variable',4,'p_dcl_variable','analizadorSintactico.py',222),
  ('dcl_variable -> tipo_palabra ID EQUALS STRING_LITERAL','dcl_variable',4,'p_dcl_variable','analizadorSintactico.py',223),
  ('dcl_variable -> tipo_booleano ID EQUALS valor_boolean','dcl_variable',4,'p_dcl_variable','analizadorSintactico.py',224),
  ('dcl_variable -> tipo_number ID','dcl_variable',2,'p_dcl_variable','analizadorSintactico.py',225),
  ('dcl_variable -> tipo_palabra ID','dcl_variable',2,'p_dcl_variable','analizadorSintactico.py',226),
  ('dcl_variable -> tipo_booleano ID','dcl_variable',2,'p_dcl_variable','analizadorSintactico.py',227),
  ('tipo_booleano -> BOOLEAN','tipo_booleano',1,'p_tipo_booleano','analizadorSintactico.py',239),
  ('tipo_number -> INT','tipo_number',1,'p_tipo_number','analizadorSintactico.py',246),
  ('tipo_number -> DOUBLE','tipo_number',1,'p_tipo_number','analizadorSintactico.py',247),
  ('tipo_palabra -> STRING','tipo_palabra',1,'p_tipo_palabra','analizadorSintactico.py',254),
  ('valor_boolean -> TRUE','valor_boolean',1,'p_valor_boolean','analizadorSintactico.py',261),
  ('valor_boolean -> FALSE','valor_boolean',1,'p_valor_boolean','analizadorSintactico.py',262),
  ('array_usage -> tipo_number LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI','array_usage',9,'p_array_usage','analizadorSintactico.py',269),
  ('array_usage -> tipo_palabra LBRACKET RBRACKET ID EQUALS LBRACE args RBRACE SEMI','array_usage',9,'p_array_usage','analizadorSintactico.py',270),
  ('print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN STRING_LITERAL RPAREN SEMI','print_statement',9,'p_print_statement','analizadorSintactico.py',278),
  ('print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID RPAREN SEMI','print_statement',9,'p_print_statement','analizadorSintactico.py',279),
  ('print_statement -> SYSTEM PUNTO OUT PUNTO PRINTLN LPAREN ID LBRACKET ID RBRACKET RPAREN SEMI','print_statement',12,'p_print_statement','analizadorSintactico.py',280),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',288),
]
