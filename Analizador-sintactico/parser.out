Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    OPERATOR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression EQUALS expression
Rule 2     expression -> expression LESS expression
Rule 3     expression -> expression GREATER expression
Rule 4     expression -> expression AND expression
Rule 5     expression -> expression OR expression
Rule 6     expression -> NOT expression
Rule 7     expression -> IDENTIFIER
Rule 8     expression -> NUMBER
Rule 9     statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 10    statement -> assignment
Rule 11    statement -> array_usage
Rule 12    statements -> statement
Rule 13    statements -> statements statement
Rule 14    assignment -> IDENTIFIER EQUALS expression
Rule 15    array_usage -> IDENTIFIER LBRACE expression RBRACE

Terminals, with rules where they appear

AND                  : 4
EQUALS               : 1 14
GREATER              : 3
IDENTIFIER           : 7 14 15
IF                   : 9
LBRACE               : 9 15
LESS                 : 2
LPAREN               : 9
NOT                  : 6
NUMBER               : 8
OPERATOR             : 
OR                   : 5
RBRACE               : 9 15
RPAREN               : 9
error                : 

Nonterminals, with rules where they appear

array_usage          : 11
assignment           : 10
expression           : 1 1 2 2 3 3 4 4 5 5 6 9 14 15 0
statement            : 12 13
statements           : 9 13

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9


state 2

    (6) expression -> NOT . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 10

state 3

    (7) expression -> IDENTIFIER .

    EQUALS          reduce using rule 7 (expression -> IDENTIFIER .)
    LESS            reduce using rule 7 (expression -> IDENTIFIER .)
    GREATER         reduce using rule 7 (expression -> IDENTIFIER .)
    AND             reduce using rule 7 (expression -> IDENTIFIER .)
    OR              reduce using rule 7 (expression -> IDENTIFIER .)
    $end            reduce using rule 7 (expression -> IDENTIFIER .)


state 4

    (8) expression -> NUMBER .

    EQUALS          reduce using rule 8 (expression -> NUMBER .)
    LESS            reduce using rule 8 (expression -> NUMBER .)
    GREATER         reduce using rule 8 (expression -> NUMBER .)
    AND             reduce using rule 8 (expression -> NUMBER .)
    OR              reduce using rule 8 (expression -> NUMBER .)
    $end            reduce using rule 8 (expression -> NUMBER .)


state 5

    (1) expression -> expression EQUALS . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 11

state 6

    (2) expression -> expression LESS . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 12

state 7

    (3) expression -> expression GREATER . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 13

state 8

    (4) expression -> expression AND . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 14

state 9

    (5) expression -> expression OR . expression
    (1) expression -> . expression EQUALS expression
    (2) expression -> . expression LESS expression
    (3) expression -> . expression GREATER expression
    (4) expression -> . expression AND expression
    (5) expression -> . expression OR expression
    (6) expression -> . NOT expression
    (7) expression -> . IDENTIFIER
    (8) expression -> . NUMBER

    NOT             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NUMBER          shift and go to state 4

    expression                     shift and go to state 15

state 10

    (6) expression -> NOT expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 6 (expression -> NOT expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 6 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 6 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 6 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 6 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 6 (expression -> NOT expression .) ]


state 11

    (1) expression -> expression EQUALS expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 1 (expression -> expression EQUALS expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 1 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 1 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 1 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 1 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 1 (expression -> expression EQUALS expression .) ]


state 12

    (2) expression -> expression LESS expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 2 (expression -> expression LESS expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 2 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 2 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 2 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 2 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 2 (expression -> expression LESS expression .) ]


state 13

    (3) expression -> expression GREATER expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 3 (expression -> expression GREATER expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 3 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 3 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 3 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 3 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 3 (expression -> expression GREATER expression .) ]


state 14

    (4) expression -> expression AND expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 4 (expression -> expression AND expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 4 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 4 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 4 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 4 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 4 (expression -> expression AND expression .) ]


state 15

    (5) expression -> expression OR expression .
    (1) expression -> expression . EQUALS expression
    (2) expression -> expression . LESS expression
    (3) expression -> expression . GREATER expression
    (4) expression -> expression . AND expression
    (5) expression -> expression . OR expression

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 5 (expression -> expression OR expression .)
    EQUALS          shift and go to state 5
    LESS            shift and go to state 6
    GREATER         shift and go to state 7
    AND             shift and go to state 8
    OR              shift and go to state 9

  ! EQUALS          [ reduce using rule 5 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 5 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 5 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 5 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 5 (expression -> expression OR expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUALS in state 10 resolved as shift
WARNING: shift/reduce conflict for LESS in state 10 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 10 resolved as shift
WARNING: shift/reduce conflict for AND in state 10 resolved as shift
WARNING: shift/reduce conflict for OR in state 10 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 11 resolved as shift
WARNING: shift/reduce conflict for LESS in state 11 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 11 resolved as shift
WARNING: shift/reduce conflict for AND in state 11 resolved as shift
WARNING: shift/reduce conflict for OR in state 11 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 12 resolved as shift
WARNING: shift/reduce conflict for LESS in state 12 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 12 resolved as shift
WARNING: shift/reduce conflict for AND in state 12 resolved as shift
WARNING: shift/reduce conflict for OR in state 12 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 13 resolved as shift
WARNING: shift/reduce conflict for LESS in state 13 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 13 resolved as shift
WARNING: shift/reduce conflict for OR in state 13 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 14 resolved as shift
WARNING: shift/reduce conflict for LESS in state 14 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 14 resolved as shift
WARNING: shift/reduce conflict for AND in state 14 resolved as shift
WARNING: shift/reduce conflict for OR in state 14 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 15 resolved as shift
WARNING: shift/reduce conflict for LESS in state 15 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 15 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
